{"version":3,"file":"ngx-openlayers.js.map","sources":["ng://ngx-openlayers/lib/map.component.ts","ng://ngx-openlayers/lib/view.component.ts","ng://ngx-openlayers/lib/graticule.component.ts","ng://ngx-openlayers/lib/layers/layer.component.ts","ng://ngx-openlayers/lib/layers/layergroup.component.ts","ng://ngx-openlayers/lib/layers/layerimage.component.ts","ng://ngx-openlayers/lib/layers/layertile.component.ts","ng://ngx-openlayers/lib/layers/layervector.component.ts","ng://ngx-openlayers/lib/layers/layervectortile.component.ts","ng://ngx-openlayers/lib/sources/source.component.ts","ng://ngx-openlayers/lib/tilegrid.component.ts","ng://ngx-openlayers/lib/sources/raster.component.ts","ng://ngx-openlayers/lib/sources/xyz.component.ts","ng://ngx-openlayers/lib/sources/osm.component.ts","ng://ngx-openlayers/lib/sources/bingmaps.component.ts","ng://ngx-openlayers/lib/sources/vector.component.ts","ng://ngx-openlayers/lib/sources/cluster.component.ts","ng://ngx-openlayers/lib/tilegridwmts.component.ts","ng://ngx-openlayers/lib/sources/tilewmts.component.ts","ng://ngx-openlayers/lib/formats/format.component.ts","ng://ngx-openlayers/lib/sources/vectortile.component.ts","ng://ngx-openlayers/lib/sources/tilewms.component.ts","ng://ngx-openlayers/lib/sources/tilejson.component.ts","ng://ngx-openlayers/lib/sources/geojson.component.ts","ng://ngx-openlayers/lib/sources/imagestatic.component.ts","ng://ngx-openlayers/lib/sources/imagewms.component.ts","ng://ngx-openlayers/lib/sources/imagearcgisrest.component.ts","ng://ngx-openlayers/lib/feature.component.ts","ng://ngx-openlayers/lib/geom/simplegeometry.component.ts","ng://ngx-openlayers/lib/geom/geometrycircle.component.ts","ng://ngx-openlayers/lib/geom/geometrylinestring.component.ts","ng://ngx-openlayers/lib/geom/geometrymultilinestring.component.ts","ng://ngx-openlayers/lib/geom/geometrymultipoint.component.ts","ng://ngx-openlayers/lib/geom/geometrymultipolygon.component.ts","ng://ngx-openlayers/lib/geom/geometrypoint.component.ts","ng://ngx-openlayers/lib/geom/geometrypolygon.component.ts","ng://ngx-openlayers/lib/content.component.ts","ng://ngx-openlayers/lib/overlay.component.ts","ng://ngx-openlayers/lib/coordinate.component.ts","ng://ngx-openlayers/lib/collectioncoordinates.component.ts","ng://ngx-openlayers/lib/styles/style.component.ts","ng://ngx-openlayers/lib/styles/circle.component.ts","ng://ngx-openlayers/lib/styles/text.component.ts","ng://ngx-openlayers/lib/styles/stroke.component.ts","ng://ngx-openlayers/lib/styles/icon.component.ts","ng://ngx-openlayers/lib/styles/fill.component.ts","ng://ngx-openlayers/lib/controls/default.component.ts","ng://ngx-openlayers/lib/controls/control.component.ts","ng://ngx-openlayers/lib/controls/attribution.component.ts","ng://ngx-openlayers/lib/controls/fullscreen.component.ts","ng://ngx-openlayers/lib/controls/mouseposition.component.ts","ng://ngx-openlayers/lib/controls/overviewmap.component.ts","ng://ngx-openlayers/lib/controls/rotate.component.ts","ng://ngx-openlayers/lib/controls/scaleline.component.ts","ng://ngx-openlayers/lib/controls/zoom.component.ts","ng://ngx-openlayers/lib/controls/zoomslider.component.ts","ng://ngx-openlayers/lib/controls/zoomtoextent.component.ts","ng://ngx-openlayers/lib/formats/mvt.component.ts","ng://ngx-openlayers/lib/interactions/default.component.ts","ng://ngx-openlayers/lib/interactions/doubleclickzoom.component.ts","ng://ngx-openlayers/lib/interactions/draganddrop.component.ts","ng://ngx-openlayers/lib/interactions/dragbox.component.ts","ng://ngx-openlayers/lib/interactions/dragpan.component.ts","ng://ngx-openlayers/lib/interactions/dragrotate.component.ts","ng://ngx-openlayers/lib/interactions/dragrotateandzoom.component.ts","ng://ngx-openlayers/lib/interactions/dragzoom.component.ts","ng://ngx-openlayers/lib/interactions/mousewheelzoom.component.ts","ng://ngx-openlayers/lib/interactions/pinchzoom.component.ts","ng://ngx-openlayers/lib/interactions/draw.component.ts","ng://ngx-openlayers/lib/interactions/select.component.ts","ng://ngx-openlayers/lib/interactions/modify.component.ts","ng://ngx-openlayers/lib/interactions/translate.component.ts","ng://ngx-openlayers/lib/attribution.component.ts","ng://ngx-openlayers/lib/attributions.component.ts","ng://ngx-openlayers/lib/sources/utfgrid.component.ts","ng://ngx-openlayers/public_api.ts"],"sourcesContent":["import {\n  Component,\n  OnInit,\n  ElementRef,\n  Input,\n  Output,\n  EventEmitter,\n  AfterViewInit,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport Map from 'ol/Map';\nimport MapBrowserEvent from 'ol/MapBrowserEvent';\nimport MapEvent from 'ol/MapEvent';\nimport ObjectEvent from 'ol/Object';\nimport RenderEvent from 'ol/render/Event';\nimport { Control } from 'ol/control';\nimport { Interaction } from 'ol/interaction';\n\n@Component({\n  selector: 'aol-map',\n  template: `\n    <div [style.width]=\"width\" [style.height]=\"height\"></div>\n    <ng-content></ng-content>\n  `,\n})\nexport class MapComponent implements OnInit, AfterViewInit, OnChanges {\n  public instance: Map;\n  public componentType = 'map';\n\n  @Input()\n  width = '100%';\n  @Input()\n  height = '100%';\n  @Input()\n  pixelRatio: number;\n  @Input()\n  keyboardEventTarget: Element | string;\n  @Input()\n  loadTilesWhileAnimating: boolean;\n  @Input()\n  loadTilesWhileInteracting: boolean;\n  @Input()\n  logo: string | boolean;\n  @Input()\n  renderer: 'canvas' | 'webgl';\n\n  @Output()\n  onClick: EventEmitter<MapBrowserEvent>;\n  @Output()\n  onDblClick: EventEmitter<MapBrowserEvent>;\n  @Output()\n  onMoveEnd: EventEmitter<MapEvent>;\n  @Output()\n  onPointerDrag: EventEmitter<MapBrowserEvent>;\n  @Output()\n  onPointerMove: EventEmitter<MapBrowserEvent>;\n  @Output()\n  onPostCompose: EventEmitter<RenderEvent>;\n  @Output()\n  onPostRender: EventEmitter<MapEvent>;\n  @Output()\n  onPreCompose: EventEmitter<RenderEvent>;\n  @Output()\n  onPropertyChange: EventEmitter<ObjectEvent>;\n  @Output()\n  onSingleClick: EventEmitter<MapBrowserEvent>;\n\n  // we pass empty arrays to not get default controls/interactions because we have our own directives\n  controls: Control[] = [];\n  interactions: Interaction[] = [];\n\n  constructor(private host: ElementRef) {\n    this.onClick = new EventEmitter<MapBrowserEvent>();\n    this.onDblClick = new EventEmitter<MapBrowserEvent>();\n    this.onMoveEnd = new EventEmitter<MapEvent>();\n    this.onPointerDrag = new EventEmitter<MapBrowserEvent>();\n    this.onPointerMove = new EventEmitter<MapBrowserEvent>();\n    this.onPostCompose = new EventEmitter<RenderEvent>();\n    this.onPostRender = new EventEmitter<MapEvent>();\n    this.onPreCompose = new EventEmitter<RenderEvent>();\n    this.onPropertyChange = new EventEmitter<ObjectEvent>();\n    this.onSingleClick = new EventEmitter<MapBrowserEvent>();\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.Map instance with:', this);\n    this.instance = new Map(this);\n    this.instance.setTarget(this.host.nativeElement.firstElementChild);\n    this.instance.on('click', (event: MapBrowserEvent) => this.onClick.emit(event));\n    this.instance.on('dblclick', (event: MapBrowserEvent) => this.onDblClick.emit(event));\n    this.instance.on('moveend', (event: MapEvent) => this.onMoveEnd.emit(event));\n    this.instance.on('pointerdrag', (event: MapBrowserEvent) => this.onPointerDrag.emit(event));\n    this.instance.on('pointermove', (event: MapBrowserEvent) => this.onPointerMove.emit(event));\n    this.instance.on('postcompose', (event: RenderEvent) => this.onPostCompose.emit(event));\n    this.instance.on('postrender', (event: MapEvent) => this.onPostRender.emit(event));\n    this.instance.on('precompose', (event: RenderEvent) => this.onPreCompose.emit(event));\n    this.instance.on('propertychange', (event: ObjectEvent) => this.onPropertyChange.emit(event));\n    this.instance.on('singleclick', (event: MapBrowserEvent) => this.onSingleClick.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    // console.log('changes detected in aol-map, setting new properties: ', properties);\n    this.instance.setProperties(properties, false);\n  }\n\n  ngAfterViewInit() {\n    this.instance.updateSize();\n  }\n}\n","import { Component, Input, OnInit, OnChanges, OnDestroy, SimpleChanges, EventEmitter, Output } from '@angular/core';\nimport View from 'ol/View';\nimport { MapComponent } from './map.component';\nimport { ObjectEvent } from 'ol';\nimport { Extent } from 'ol/extent';\nimport { Coordinate } from 'ol/coordinate';\n\n@Component({\n  selector: 'aol-view',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ViewComponent implements OnInit, OnChanges, OnDestroy {\n  public instance: View;\n  public componentType = 'view';\n\n  @Input()\n  constrainRotation: boolean | number;\n  @Input()\n  enableRotation: boolean;\n  @Input()\n  extent: Extent;\n  @Input()\n  maxResolution: number;\n  @Input()\n  minResolution: number;\n  @Input()\n  maxZoom: number;\n  @Input()\n  minZoom: number;\n  @Input()\n  resolution: number;\n  @Input()\n  resolutions: number[];\n  @Input()\n  rotation: number;\n  @Input()\n  zoom: number;\n  @Input()\n  zoomFactor: number;\n  @Input()\n  center: Coordinate;\n  @Input()\n  projection: string;\n  @Input()\n  zoomAnimation = false;\n\n  @Output()\n  onChangeZoom: EventEmitter<ObjectEvent> = new EventEmitter<ObjectEvent>();\n  @Output()\n  onChangeResolution: EventEmitter<ObjectEvent> = new EventEmitter<ObjectEvent>();\n  @Output()\n  onChangeCenter: EventEmitter<ObjectEvent> = new EventEmitter<ObjectEvent>();\n\n  constructor(private host: MapComponent) {}\n\n  ngOnInit() {\n    // console.log('creating ol.View instance with: ', this);\n    this.instance = new View(this);\n    this.host.instance.setView(this.instance);\n\n    this.instance.on('change:zoom', (event: ObjectEvent) => this.onChangeZoom.emit(event));\n    this.instance.on('change:resolution', (event: ObjectEvent) => this.onChangeResolution.emit(event));\n    this.instance.on('change:center', (event: ObjectEvent) => this.onChangeCenter.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        switch (key) {\n          case 'zoom':\n            /** Work-around: setting the zoom via setProperties does not work. */\n            if (this.zoomAnimation) {\n              this.instance.animate({ zoom: changes[key].currentValue });\n            } else {\n              this.instance.setZoom(changes[key].currentValue);\n            }\n            break;\n          case 'projection':\n            this.instance = new View(this);\n            this.host.instance.setView(this.instance);\n            break;\n          default:\n            break;\n        }\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    // console.log('changes detected in aol-view, setting new properties: ', properties);\n    this.instance.setProperties(properties, false);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-view');\n  }\n}\n","import { Component, Input, AfterContentInit, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { Graticule } from 'ol';\nimport { Stroke } from 'ol/style';\nimport { MapComponent } from './map.component';\n\n@Component({\n  selector: 'aol-graticule',\n  template: '<ng-content></ng-content>',\n})\nexport class GraticuleComponent implements AfterContentInit, OnChanges, OnDestroy {\n  instance: any;\n  public componentType = 'graticule';\n\n  @Input()\n  strokeStyle: Stroke;\n  @Input()\n  showLabels: boolean;\n  @Input()\n  lonLabelPosition: number;\n  @Input()\n  latLabelPosition: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n\n    if (!this.instance) {\n      return;\n    }\n\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n      }\n    }\n\n    if (properties) {\n      this.instance = new Graticule(properties);\n    }\n    this.instance.setMap(this.map.instance);\n  }\n\n  ngAfterContentInit(): void {\n    this.instance = new Graticule({\n      strokeStyle: this.strokeStyle,\n      showLabels: this.showLabels,\n      lonLabelPosition: this.lonLabelPosition,\n      latLabelPosition: this.latLabelPosition,\n    });\n    this.instance.setMap(this.map.instance);\n  }\n\n  ngOnDestroy(): void {\n    this.instance.setMap(null);\n  }\n}\n","import { OnDestroy, OnInit, OnChanges, Input, SimpleChanges } from '@angular/core';\nimport { Event } from 'ol/events';\nimport { MapComponent } from '../map.component';\nimport { LayerGroupComponent } from './layergroup.component';\nimport { Extent } from 'ol/extent';\n\nexport abstract class LayerComponent implements OnInit, OnChanges, OnDestroy {\n  public instance: any;\n  public componentType = 'layer';\n\n  @Input()\n  opacity: number;\n  @Input()\n  visible: boolean;\n  @Input()\n  extent: Extent;\n  @Input()\n  zIndex: number;\n  @Input()\n  minResolution: number;\n  @Input()\n  maxResolution: number;\n\n  @Input()\n  precompose: (evt: Event) => void;\n  @Input()\n  postcompose: (evt: Event) => void;\n\n  constructor(protected host: MapComponent | LayerGroupComponent) {}\n\n  ngOnInit() {\n    if (this.precompose !== null && this.precompose !== undefined) {\n      this.instance.on('precompose', this.precompose);\n    }\n    if (this.postcompose !== null && this.postcompose !== undefined) {\n      this.instance.on('postcompose', this.postcompose);\n    }\n    this.host.instance.getLayers().push(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.host.instance.getLayers().remove(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n        if (key === 'precompose') {\n          this.instance.un('precompose', changes[key].previousValue);\n          this.instance.on('precompose', changes[key].currentValue);\n        }\n        if (key === 'postcompose') {\n          this.instance.un('postcompose', changes[key].previousValue);\n          this.instance.on('postcompose', changes[key].currentValue);\n        }\n      }\n    }\n    // console.log('changes detected in aol-layer, setting new properties: ', properties);\n    this.instance.setProperties(properties, false);\n  }\n}\n","import { Component, OnDestroy, OnInit, SkipSelf, Optional } from '@angular/core';\nimport { Group } from 'ol/layer';\nimport { LayerComponent } from './layer.component';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-layer-group',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerGroupComponent extends LayerComponent implements OnInit, OnDestroy {\n  public instance: Group;\n\n  constructor(\n    map: MapComponent,\n    @SkipSelf()\n    @Optional()\n    group?: LayerGroupComponent\n  ) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log(`creating ol.layer.Group instance with:`, this);\n    this.instance = new Group(this);\n    super.ngOnInit();\n  }\n}\n","import { Component, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\nimport { Image } from 'ol/layer';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\nimport { Extent } from 'ol/extent';\n\n@Component({\n  selector: 'aol-layer-image',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerImageComponent extends LayerComponent implements OnInit, OnChanges {\n  public source: Image;\n\n  @Input()\n  opacity: number;\n  @Input()\n  visible: boolean;\n  @Input()\n  extent: Extent;\n  @Input()\n  minResolution: number;\n  @Input()\n  maxResolution: number;\n  @Input()\n  zIndex: number;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    this.instance = new Image(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\nimport { Tile } from 'ol/layer';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\n\n@Component({\n  selector: 'aol-layer-tile',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerTileComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\n  public source: Tile;\n\n  @Input()\n  preload: number;\n  @Input()\n  useInterimTilesOnError: boolean;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.layer.Tile instance with:', this);\n    this.instance = new Tile(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\nimport { MapComponent } from '../map.component';\nimport { Vector } from 'ol/layer';\nimport { Style } from 'ol/style';\nimport { StyleFunction } from 'ol/style/Style';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\n\n@Component({\n  selector: 'aol-layer-vector',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerVectorComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\n  public source: Vector;\n\n  @Input()\n  renderBuffer: number;\n\n  @Input()\n  style: Style | Style[] | StyleFunction;\n\n  @Input()\n  updateWhileAnimating: boolean;\n\n  @Input()\n  updateWhileInteracting: boolean;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.layer.Vector instance with:', this);\n    this.instance = new Vector(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Component, OnInit, Input, Optional, SimpleChanges, OnChanges } from '@angular/core';\nimport { VectorTile } from 'ol/layer';\nimport { RenderType } from 'ol/layer/VectorTile';\nimport { Feature } from 'ol';\nimport { Style } from 'ol/style';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\nimport { StyleFunction } from 'ol/style/Style';\n\n@Component({\n  selector: 'aol-layer-vectortile',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerVectorTileComponent extends LayerComponent implements OnInit, OnChanges {\n  @Input()\n  renderBuffer: number;\n  @Input()\n  renderMode: RenderType | string;\n  /* not marked as optional in the typings */\n  @Input()\n  renderOrder: (feature1: Feature, feature2: Feature) => number;\n  @Input()\n  style: Style | Style[] | StyleFunction;\n  @Input()\n  updateWhileAnimating: boolean;\n  @Input()\n  updateWhileInteracting: boolean;\n  @Input()\n  visible: boolean;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.layer.VectorTile instance with:', this);\n    this.instance = new VectorTile(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Input, OnDestroy } from '@angular/core';\nimport { Source } from 'ol';\nimport { LayerComponent } from '../layers/layer.component';\nimport { SourceRasterComponent } from './raster.component';\n\nexport class SourceComponent implements OnDestroy {\n  public instance: Source;\n  public componentType = 'source';\n\n  @Input()\n  attributions: any;\n\n  constructor(protected host: LayerComponent, protected raster?: SourceRasterComponent) {}\n\n  ngOnDestroy() {\n    if (this.host && this.host.instance) {\n      this.host.instance.setSource(null);\n    }\n\n    if (this.raster) {\n      this.raster.sources = [];\n    }\n  }\n\n  protected _register(s: Source) {\n    if (this.host) {\n      this.host.instance.setSource(s);\n    }\n\n    if (this.raster) {\n      this.raster.sources = [s];\n      this.raster.init();\n    }\n  }\n}\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { createXYZ } from 'ol/tilegrid';\nimport TileGrid from 'ol/tilegrid/TileGrid';\nimport { Extent } from 'ol/extent';\nimport { Coordinate } from 'ol/coordinate';\nimport { Size } from 'ol/size';\n\n@Component({\n  selector: 'aol-tilegrid',\n  template: '',\n})\nexport class TileGridComponent implements OnInit, OnChanges {\n  instance: TileGrid;\n\n  @Input()\n  extent: Extent;\n  @Input()\n  maxZoom: number;\n  @Input()\n  minZoom: number;\n  @Input()\n  tileSize: number | Size;\n  @Input()\n  origin?: Coordinate;\n  @Input()\n  resolutions: number[];\n\n  ngOnInit() {\n    if (!this.resolutions) {\n      this.instance = createXYZ(this);\n    } else {\n      this.instance = new TileGrid(this);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.resolutions) {\n      this.instance = createXYZ(this);\n    } else {\n      this.instance = new TileGrid(this);\n    }\n  }\n}\n","import { AfterContentInit, Component, EventEmitter, forwardRef, Host, Input, Output } from '@angular/core';\nimport { Raster, Source } from 'ol/source';\nimport { RasterOperationType, RasterSourceEvent } from 'ol/source/Raster';\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { SourceComponent } from './source.component';\nimport { Operation } from 'ol/source/Raster';\n\n@Component({\n  selector: 'aol-source-raster',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [\n    {\n      provide: SourceComponent,\n      useExisting: forwardRef(() => SourceRasterComponent),\n    },\n  ],\n})\nexport class SourceRasterComponent extends SourceComponent implements AfterContentInit {\n  instance: Raster;\n\n  @Input()\n  operation?: Operation;\n  @Input()\n  threads?: number;\n  @Input()\n  lib?: Object;\n  @Input()\n  operationType?: RasterOperationType;\n\n  @Output()\n  beforeOperations: EventEmitter<RasterSourceEvent> = new EventEmitter<RasterSourceEvent>();\n  @Output()\n  afterOperations: EventEmitter<RasterSourceEvent> = new EventEmitter<RasterSourceEvent>();\n\n  sources: Source[] = [];\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngAfterContentInit() {\n    this.init();\n  }\n\n  init() {\n    this.instance = new Raster(this);\n    this.instance.on('beforeoperations', (event: RasterSourceEvent) => this.beforeOperations.emit(event));\n    this.instance.on('afteroperations', (event: RasterSourceEvent) => this.afterOperations.emit(event));\n    this._register(this.instance);\n  }\n}\n","import {\n  Component,\n  Host,\n  Input,\n  AfterContentInit,\n  forwardRef,\n  OnChanges,\n  ContentChild,\n  SimpleChanges,\n  Optional,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { XYZ } from 'ol/source';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { TileGridComponent } from '../tilegrid.component';\nimport { SourceRasterComponent } from './raster.component';\nimport { Size } from 'ol/size';\nimport { TileSourceEvent } from 'ol/source/Tile';\nimport TileGrid from 'ol/tilegrid/TileGrid';\nimport { LoadFunction, UrlFunction } from 'ol/Tile';\n\n@Component({\n  selector: 'aol-source-xyz',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceXYZComponent) }],\n})\nexport class SourceXYZComponent extends SourceComponent implements AfterContentInit, OnChanges {\n  instance: XYZ;\n  @Input()\n  cacheSize: number;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  opaque: boolean;\n  @Input()\n  projection: string;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  minZoom: number;\n  @Input()\n  maxZoom: number;\n  @Input()\n  tileGrid: TileGrid;\n  @Input()\n  tileLoadFunction?: LoadFunction;\n  @Input()\n  tilePixelRatio: number;\n  @Input()\n  tileSize: number | Size;\n  @Input()\n  tileUrlFunction?: UrlFunction;\n  @Input()\n  url: string;\n  @Input()\n  urls: string[];\n  @Input()\n  wrapX: boolean;\n\n  @ContentChild(TileGridComponent)\n  tileGridXYZ: TileGridComponent;\n\n  @Output()\n  tileLoadStart: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n  @Output()\n  tileLoadEnd: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n  @Output()\n  tileLoadError: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n\n  constructor(\n    @Optional()\n    @Host()\n    layer: LayerTileComponent,\n    @Optional()\n    @Host()\n    raster?: SourceRasterComponent\n  ) {\n    super(layer, raster);\n  }\n\n  ngAfterContentInit() {\n    if (this.tileGridXYZ) {\n      this.tileGrid = this.tileGridXYZ.instance;\n    }\n    this.init();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n      }\n    }\n\n    this.instance.setProperties(properties, false);\n    if (changes.hasOwnProperty('url')) {\n      this.init();\n    }\n  }\n\n  init() {\n    this.instance = new XYZ(this);\n\n    this.instance.on('tileloadstart', (event: TileSourceEvent) => this.tileLoadStart.emit(event));\n    this.instance.on('tileloadend', (event: TileSourceEvent) => this.tileLoadEnd.emit(event));\n    this.instance.on('tileloaderror', (event: TileSourceEvent) => this.tileLoadError.emit(event));\n\n    this._register(this.instance);\n  }\n}\n","import { Component, Host, forwardRef, Input, AfterContentInit, Optional, Output, EventEmitter } from '@angular/core';\nimport { OSM } from 'ol/source';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { SourceXYZComponent } from './xyz.component';\nimport { SourceRasterComponent } from './raster.component';\nimport { LoadFunction } from 'ol/Tile';\nimport { AttributionLike } from 'ol/source/Source';\nimport { TileSourceEvent } from 'ol/source/Tile';\n\n@Component({\n  selector: 'aol-source-osm',\n  template: `\n    <div class=\"aol-source-osm\"></div>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceOsmComponent) }],\n})\nexport class SourceOsmComponent extends SourceXYZComponent implements AfterContentInit {\n  instance: OSM;\n\n  @Input()\n  attributions: AttributionLike;\n  @Input()\n  cacheSize: number;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  maxZoom: number;\n  @Input()\n  opaque: boolean;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  tileLoadFunction: LoadFunction;\n  @Input()\n  url: string;\n  @Input()\n  wrapX: boolean;\n\n  @Output()\n  tileLoadStart: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n  @Output()\n  tileLoadEnd: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n  @Output()\n  tileLoadError: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n\n  constructor(\n    @Host()\n    @Optional()\n    layer: LayerTileComponent,\n    @Host()\n    @Optional()\n    raster?: SourceRasterComponent\n  ) {\n    super(layer, raster);\n  }\n\n  ngAfterContentInit() {\n    if (this.tileGridXYZ) {\n      this.tileGrid = this.tileGridXYZ.instance;\n    }\n\n    this.instance = new OSM(this);\n\n    this.instance.on('tileloadstart', (event: TileSourceEvent) => this.tileLoadStart.emit(event));\n    this.instance.on('tileloadend', (event: TileSourceEvent) => this.tileLoadEnd.emit(event));\n    this.instance.on('tileloaderror', (event: TileSourceEvent) => this.tileLoadError.emit(event));\n    this._register(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { BingMaps } from 'ol/source';\nimport { SourceComponent } from './source.component';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { LoadFunction } from 'ol/Tile';\n\n@Component({\n  selector: 'aol-source-bingmaps',\n  template: `\n    <div class=\"aol-source-bingmaps\"></div>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceBingmapsComponent) }],\n})\nexport class SourceBingmapsComponent extends SourceComponent implements OnInit {\n  instance: BingMaps;\n\n  @Input()\n  cacheSize: number;\n  @Input()\n  hidpi: boolean;\n  @Input()\n  culture: string;\n  @Input()\n  key: string;\n  @Input()\n  imagerySet: 'Road' | 'Aerial' | 'AerialWithLabels' | 'collinsBart' | 'ordnanceSurvey' = 'Aerial';\n  @Input()\n  maxZoom: number;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  tileLoadFunction: LoadFunction;\n  @Input()\n  wrapX: boolean;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new BingMaps(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { Vector } from 'ol/source';\nimport Feature from 'ol/format/Feature';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { SourceComponent } from './source.component';\nimport { LoadingStrategy } from 'ol/source/Vector';\n\n@Component({\n  selector: 'aol-source-vector',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceVectorComponent) }],\n})\nexport class SourceVectorComponent extends SourceComponent implements OnInit {\n  instance: Vector;\n  @Input()\n  overlaps: boolean;\n  @Input()\n  useSpatialIndex: boolean;\n  @Input()\n  wrapX: boolean;\n  @Input()\n  url: string;\n  @Input()\n  format: Feature;\n  @Input()\n  strategy: LoadingStrategy;\n\n  constructor(@Host() layer: LayerVectorComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new Vector(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import {\n  Component,\n  Host,\n  Input,\n  forwardRef,\n  ContentChild,\n  AfterContentInit,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport { Feature } from 'ol';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { SourceComponent } from './source.component';\nimport { SourceVectorComponent } from './vector.component';\nimport { Cluster, Vector } from 'ol/source';\nimport { Point } from 'ol/geom';\n\n@Component({\n  selector: 'aol-source-cluster',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceClusterComponent) }],\n})\nexport class SourceClusterComponent extends SourceComponent implements AfterContentInit, OnChanges {\n  instance: Cluster;\n\n  @Input()\n  distance: number;\n  @Input()\n  geometryFunction?: (feature: Feature) => Point;\n  @Input()\n  wrapX?: boolean;\n\n  @ContentChild(SourceVectorComponent)\n  sourceVectorComponent: SourceVectorComponent;\n  source: Vector;\n\n  constructor(@Host() layer: LayerVectorComponent) {\n    super(layer);\n  }\n\n  ngAfterContentInit() {\n    this.source = this.sourceVectorComponent.instance;\n\n    this.instance = new Cluster(this);\n    this.host.instance.setSource(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance && changes.hasOwnProperty('distance')) {\n      this.instance.setDistance(this.distance);\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport WMTS from 'ol/tilegrid/WMTS';\nimport { TileGridComponent } from './tilegrid.component';\nimport { Coordinate } from 'ol/coordinate';\nimport { Size } from 'ol/size';\n\n@Component({\n  selector: 'aol-tilegrid-wmts',\n  template: '',\n})\nexport class TileGridWMTSComponent extends TileGridComponent implements OnInit {\n  instance: WMTS;\n\n  @Input()\n  origin?: Coordinate;\n  @Input()\n  origins?: Coordinate[];\n  @Input()\n  resolutions: number[];\n  @Input()\n  matrixIds: string[];\n  @Input()\n  sizes?: Size[];\n  @Input()\n  tileSizes?: (number | Size)[];\n  @Input()\n  widths?: number[];\n\n  ngOnInit() {\n    this.instance = new WMTS(this);\n  }\n}\n","import {\n  Component,\n  Host,\n  Input,\n  forwardRef,\n  AfterContentInit,\n  ContentChild,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { TileGridWMTSComponent } from '../tilegridwmts.component';\nimport { WMTS } from 'ol/source';\nimport { WMTS as TileGridWMTS } from 'ol/tilegrid';\nimport { WMTSRequestEncoding } from 'ol/source';\nimport { ProjectionLike } from 'ol/proj';\nimport { LoadFunction } from 'ol/Tile';\n\n@Component({\n  selector: 'aol-source-tilewmts',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMTSComponent) }],\n})\nexport class SourceTileWMTSComponent extends SourceComponent implements AfterContentInit, OnChanges {\n  instance: WMTS;\n  @Input()\n  cacheSize?: number;\n  @Input()\n  crossOrigin?: string;\n  @Input()\n  tileGrid: TileGridWMTS;\n  @Input()\n  projection: ProjectionLike;\n  @Input()\n  reprojectionErrorThreshold?: number;\n  @Input()\n  requestEncoding?: WMTSRequestEncoding | string;\n  @Input()\n  layer: string;\n  @Input()\n  style: string;\n  @Input()\n  tileClass?: any;\n  @Input()\n  tilePixelRatio?: number;\n  @Input()\n  version?: string;\n  @Input()\n  format?: string;\n  @Input()\n  matrixSet: string;\n  @Input()\n  dimensions?: Object;\n  @Input()\n  url?: string;\n  @Input()\n  tileLoadFunction?: LoadFunction;\n  @Input()\n  urls?: string[];\n  @Input()\n  wrapX?: boolean;\n\n  @ContentChild(TileGridWMTSComponent)\n  tileGridWMTS: TileGridWMTSComponent;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        switch (key) {\n          case 'url':\n            this.url = changes[key].currentValue;\n            this.setLayerSource();\n            break;\n          default:\n            break;\n        }\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    this.instance.setProperties(properties, false);\n  }\n\n  setLayerSource(): void {\n    this.instance = new WMTS(this);\n    this.host.instance.setSource(this.instance);\n  }\n\n  ngAfterContentInit(): void {\n    if (this.tileGridWMTS) {\n      this.tileGrid = this.tileGridWMTS.instance;\n      this.setLayerSource();\n    }\n  }\n}\n","import Feature from 'ol/format/Feature';\n\nexport class FormatComponent {\n  public instance: Feature;\n  public componentType = 'format';\n}\n","import { Component, Host, Input, forwardRef, ContentChild, AfterContentInit } from '@angular/core';\nimport { VectorTile } from 'ol';\nimport Feature from 'ol/format/Feature';\nimport TileGrid from 'ol/tilegrid/TileGrid';\nimport { LayerVectorTileComponent } from '../layers/layervectortile.component';\nimport { FormatComponent } from '../formats/format.component';\nimport { TileGridComponent } from '../tilegrid.component';\nimport { SourceComponent } from './source.component';\nimport { ProjectionLike } from 'ol/proj';\nimport { UrlFunction } from 'ol/Tile';\n\n@Component({\n  selector: 'aol-source-vectortile',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceVectorTileComponent) }],\n})\nexport class SourceVectorTileComponent extends SourceComponent implements AfterContentInit {\n  public instance: VectorTile;\n  @Input()\n  cacheSize: number;\n  @Input()\n  overlaps: boolean;\n  @Input()\n  projection: ProjectionLike;\n  @Input()\n  tilePixelRatio: number;\n  @Input()\n  tileUrlFunction: UrlFunction;\n  @Input()\n  url: string;\n  @Input()\n  urls: string[];\n  @Input()\n  wrapX: boolean;\n\n  @ContentChild(FormatComponent)\n  formatComponent: FormatComponent;\n  format: Feature;\n  @ContentChild(TileGridComponent)\n  tileGridComponent: TileGridComponent;\n  tileGrid: TileGrid;\n\n  constructor(@Host() layer: LayerVectorTileComponent) {\n    super(layer);\n  }\n\n  /* need the children to construct the OL3 object */\n  ngAfterContentInit() {\n    this.format = this.formatComponent.instance;\n    this.tileGrid = this.tileGridComponent.instance;\n    // console.log('creating ol.source.VectorTile instance with:', this);\n    this.instance = new VectorTile(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnChanges, OnInit, forwardRef, SimpleChanges } from '@angular/core';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { TileWMS } from 'ol/source';\nimport { TileGrid } from 'ol/tilegrid';\nimport { LoadFunction } from 'ol/Tile';\n\n@Component({\n  selector: 'aol-source-tilewms',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMSComponent) }],\n})\nexport class SourceTileWMSComponent extends SourceComponent implements OnChanges, OnInit {\n  instance: TileWMS;\n  @Input()\n  cacheSize: number;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  gutter: number;\n  @Input()\n  hidpi: boolean;\n  @Input()\n  params: Object;\n  @Input()\n  projection: string;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  serverType: string;\n  @Input()\n  tileGrid: TileGrid;\n  @Input()\n  tileLoadFunction: LoadFunction;\n  @Input()\n  url: string;\n  @Input()\n  urls: string[];\n  @Input()\n  wrapX: boolean;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new TileWMS(this);\n    this.host.instance.setSource(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance && changes.hasOwnProperty('params')) {\n      this.instance.updateParams(this.params);\n    }\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { TileJSON } from 'ol/source';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-tilejson',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileJSONComponent) }],\n})\nexport class SourceTileJSONComponent extends SourceComponent implements OnInit {\n  instance: TileJSON;\n\n  @Input()\n  url: string;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new TileJSON(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { SourceComponent } from './source.component';\nimport { Feature } from 'ol';\nimport { Vector } from 'ol/source';\nimport { GeoJSON } from 'ol/format';\nimport { ProjectionLike } from 'ol/proj';\n\n@Component({\n  selector: 'aol-source-geojson',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceGeoJSONComponent) }],\n})\nexport class SourceGeoJSONComponent extends SourceComponent implements OnInit {\n  instance: Vector;\n  format: Feature;\n  @Input()\n  defaultDataProjection: ProjectionLike;\n  @Input()\n  featureProjection: ProjectionLike;\n  @Input()\n  geometryName: string;\n  @Input()\n  url: string;\n\n  constructor(@Host() layer: LayerVectorComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.format = new GeoJSON(this);\n    this.instance = new Vector(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import {\n  Component,\n  Host,\n  Input,\n  forwardRef,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  OnInit,\n} from '@angular/core';\nimport { ImageStatic } from 'ol/source';\nimport { SourceComponent } from './source.component';\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { ProjectionLike } from 'ol/proj';\nimport { Extent } from 'ol/extent';\nimport { AttributionLike } from 'ol/source/Source';\nimport { LoadFunction } from 'ol/Image';\nimport { Size } from 'ol/size';\nimport { ImageSourceEvent } from 'ol/source/Image';\n\n@Component({\n  selector: 'aol-source-imagestatic',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageStaticComponent) }],\n})\nexport class SourceImageStaticComponent extends SourceComponent implements OnInit, OnChanges {\n  instance: ImageStatic;\n\n  @Input()\n  projection: ProjectionLike | string;\n  @Input()\n  imageExtent: Extent;\n  @Input()\n  url: string;\n  @Input()\n  attributions: AttributionLike;\n  @Input()\n  crossOrigin?: string;\n  @Input()\n  imageLoadFunction?: LoadFunction;\n  @Input()\n  imageSize?: Size;\n\n  @Output()\n  onImageLoadStart = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  onImageLoadEnd = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  onImageLoadError = new EventEmitter<ImageSourceEvent>();\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  setLayerSource(): void {\n    this.instance = new ImageStatic(this);\n    this.host.instance.setSource(this.instance);\n    this.instance.on('imageloadstart', (event: ImageSourceEvent) => this.onImageLoadStart.emit(event));\n    this.instance.on('imageloadend', (event: ImageSourceEvent) => this.onImageLoadEnd.emit(event));\n    this.instance.on('imageloaderror', (event: ImageSourceEvent) => this.onImageLoadError.emit(event));\n  }\n\n  ngOnInit() {\n    this.setLayerSource();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        switch (key) {\n          case 'url':\n            this.url = changes[key].currentValue;\n            this.setLayerSource();\n            break;\n          default:\n            break;\n        }\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    this.instance.setProperties(properties, false);\n  }\n}\n","import {\n  Component,\n  Host,\n  Input,\n  OnChanges,\n  OnInit,\n  forwardRef,\n  SimpleChanges,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { ImageWMS } from 'ol/source';\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { SourceComponent } from './source.component';\nimport { ProjectionLike } from 'ol/proj';\nimport { AttributionLike } from 'ol/source/Source';\nimport { LoadFunction } from 'ol/Image';\nimport { ImageSourceEvent } from 'ol/source/Image';\n\n@Component({\n  selector: 'aol-source-imagewms',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageWMSComponent) }],\n})\nexport class SourceImageWMSComponent extends SourceComponent implements OnChanges, OnInit {\n  instance: ImageWMS;\n\n  @Input()\n  attributions: AttributionLike;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  hidpi: boolean;\n  @Input()\n  serverType: string;\n  @Input()\n  imageLoadFunction?: LoadFunction;\n  @Input()\n  params: Object;\n  @Input()\n  projection: ProjectionLike | string;\n  @Input()\n  ratio: number;\n  @Input()\n  resolutions: Array<number>;\n  @Input()\n  url: string;\n\n  @Output()\n  onImageLoadStart = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  onImageLoadEnd = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  onImageLoadError = new EventEmitter<ImageSourceEvent>();\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new ImageWMS(this);\n    this.host.instance.setSource(this.instance);\n    this.instance.on('imageloadstart', (event: ImageSourceEvent) => this.onImageLoadStart.emit(event));\n    this.instance.on('imageloadend', (event: ImageSourceEvent) => this.onImageLoadEnd.emit(event));\n    this.instance.on('imageloaderror', (event: ImageSourceEvent) => this.onImageLoadError.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance && changes.hasOwnProperty('params')) {\n      this.instance.updateParams(this.params);\n    }\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  forwardRef,\n  Host,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { ImageArcGISRest } from 'ol/source';\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { SourceComponent } from './source.component';\nimport { ProjectionLike } from 'ol/proj';\nimport { AttributionLike } from 'ol/source/Source';\nimport { LoadFunction } from 'ol/Image';\nimport { ImageSourceEvent } from 'ol/source/Image';\n\n@Component({\n  selector: 'aol-source-imagearcgisrest',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageArcGISRestComponent) }],\n})\nexport class SourceImageArcGISRestComponent extends SourceComponent implements OnInit, OnChanges {\n  instance: ImageArcGISRest;\n\n  @Input() projection: ProjectionLike | string;\n  @Input() url: string;\n  @Input() attributions: AttributionLike[];\n  @Input() crossOrigin?: string;\n  @Input() imageLoadFunction?: LoadFunction;\n  @Input() params?: { [k: string]: any };\n  @Input() ratio = 1.5;\n  @Input() resolutions?: number[];\n  @Input() wrapX?: boolean;\n\n  @Output()\n  onImageLoadStart = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  onImageLoadEnd = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  onImageLoadError = new EventEmitter<ImageSourceEvent>();\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new ImageArcGISRest(this);\n    this.host.instance.setSource(this.instance);\n    this.instance.on('imageloadstart', (event: ImageSourceEvent) => this.onImageLoadStart.emit(event));\n    this.instance.on('imageloadend', (event: ImageSourceEvent) => this.onImageLoadEnd.emit(event));\n    this.instance.on('imageloaderror', (event: ImageSourceEvent) => this.onImageLoadError.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance && changes.hasOwnProperty('params')) {\n      this.instance.updateParams(this.params);\n    }\n  }\n}\n","import { Component, OnInit, OnDestroy, OnChanges, Input, SimpleChanges } from '@angular/core';\nimport { Feature } from 'ol';\nimport { SourceVectorComponent } from './sources/vector.component';\n\n@Component({\n  selector: 'aol-feature',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class FeatureComponent implements OnInit, OnDestroy, OnChanges {\n  public componentType = 'feature';\n  public instance: Feature;\n\n  @Input()\n  id: string | number | undefined;\n\n  constructor(private host: SourceVectorComponent) {}\n\n  ngOnInit() {\n    this.instance = new Feature();\n    if (this.id !== undefined) {\n      this.instance.setId(this.id);\n    }\n    this.host.instance.addFeature(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.host.instance.removeFeature(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance) {\n      this.instance.setId(this.id);\n    }\n  }\n}\n","import { Input, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { MapComponent } from '../map.component';\nimport SimpleGeometry from 'ol/geom/SimpleGeometry';\n\nexport abstract class SimpleGeometryComponent implements OnInit {\n  public instance: SimpleGeometry;\n  public componentType = 'simple-geometry';\n\n  @Input() srid: string;\n\n  constructor(protected map: MapComponent, protected host: FeatureComponent) {}\n\n  ngOnInit() {\n    this.host.instance.setGeometry(this.instance);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { Circle } from 'ol/geom';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-geometry-circle',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryCircleComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-circle';\n  public instance: Circle;\n\n  @Input()\n  get radius(): number {\n    return this.instance.getRadius();\n  }\n  set radius(radius: number) {\n    this.instance.setRadius(radius);\n  }\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n    // defaulting coordinates to [0,0]. To be overridden in child component.\n    this.instance = new Circle([0, 0]);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { LineString } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-linestring',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryLinestringComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-linestring';\n  public instance: LineString;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new LineString([[0, 0], [1, 1]]);\n    super.ngOnInit();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { MultiLineString } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-multilinestring',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryMultiLinestringComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-multilinestring';\n  public instance: MultiLineString;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new MultiLineString([[[0, 0], [1, 1]]]);\n    super.ngOnInit();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { MultiPoint } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-multipoint',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryMultiPointComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-multipoint';\n  public instance: MultiPoint;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new MultiPoint([[0, 0], [1, 1]]);\n    super.ngOnInit();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { MultiPolygon } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-multipolygon',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryMultiPolygonComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-multipolygon';\n  public instance: MultiPolygon;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new MultiPolygon([[[[0, 0], [1, 1], [0, 1]]]]);\n    super.ngOnInit();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { Point } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-point',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryPointComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-point';\n  public instance: Point;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new Point([0, 0]);\n    super.ngOnInit();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { Polygon } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-polygon',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryPolygonComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-polygon';\n  public instance: Polygon;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new Polygon([[[0, 0], [1, 1], [0, 1]]]);\n    super.ngOnInit();\n  }\n}\n","import { Component, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'aol-content',\n  template: '<ng-content></ng-content>',\n})\nexport class ContentComponent {\n  constructor(public elementRef: ElementRef) {}\n}\n","import { Component, ContentChild, Input, OnDestroy, OnInit } from '@angular/core';\nimport { MapComponent } from './map.component';\nimport { Overlay, PanOptions } from 'ol';\nimport { ContentComponent } from './content.component';\nimport OverlayPositioning from 'ol/OverlayPositioning';\n\n@Component({\n  selector: 'aol-overlay',\n  template: '<ng-content></ng-content>',\n})\nexport class OverlayComponent implements OnInit, OnDestroy {\n  componentType = 'overlay';\n  instance: Overlay;\n  element: Element;\n  @ContentChild(ContentComponent)\n  content: ContentComponent;\n\n  @Input()\n  id: number | string;\n  @Input()\n  offset: number[];\n  @Input()\n  positioning: OverlayPositioning | string;\n  @Input()\n  stopEvent: boolean;\n  @Input()\n  insertFirst: boolean;\n  @Input()\n  autoPan: boolean;\n  @Input()\n  autoPanAnimation: PanOptions;\n  @Input()\n  autoPanMargin: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    if (this.content) {\n      this.element = this.content.elementRef.nativeElement;\n      this.instance = new Overlay(this);\n      this.map.instance.addOverlay(this.instance);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.instance) {\n      this.map.instance.removeOverlay(this.instance);\n    }\n  }\n}\n","import { Component, Optional, OnChanges, Input, SimpleChanges, OnInit } from '@angular/core';\nimport { transform } from 'ol/proj';\nimport { MapComponent } from './map.component';\nimport { GeometryPointComponent } from './geom/geometrypoint.component';\nimport { GeometryCircleComponent } from './geom/geometrycircle.component';\nimport { ViewComponent } from './view.component';\nimport { OverlayComponent } from './overlay.component';\n\n@Component({\n  selector: 'aol-coordinate',\n  template: `\n    <div class=\"aol-coordinate\"></div>\n  `,\n})\nexport class CoordinateComponent implements OnChanges, OnInit {\n  private host: any;\n  private mapSrid = 'EPSG:3857';\n\n  @Input()\n  x: number;\n  @Input()\n  y: number;\n  @Input()\n  srid = 'EPSG:3857';\n\n  constructor(\n    private map: MapComponent,\n    @Optional() viewHost: ViewComponent,\n    @Optional() geometryPointHost: GeometryPointComponent,\n    @Optional() geometryCircleHost: GeometryCircleComponent,\n    @Optional() overlayHost: OverlayComponent\n  ) {\n    // console.log('instancing aol-coordinate');\n    if (geometryPointHost !== null) {\n      this.host = geometryPointHost;\n    } else if (geometryCircleHost !== null) {\n      this.host = geometryCircleHost;\n    } else if (viewHost !== null) {\n      this.host = viewHost;\n    } else if (overlayHost !== null) {\n      this.host = overlayHost;\n    }\n  }\n\n  ngOnInit() {\n    this.map.instance.on('change:view', e => this.onMapViewChanged(e));\n    this.mapSrid = this.map.instance\n      .getView()\n      .getProjection()\n      .getCode();\n    this.transformCoordinates();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.transformCoordinates();\n  }\n\n  private onMapViewChanged(event) {\n    this.mapSrid = event.target\n      .get(event.key)\n      .getProjection()\n      .getCode();\n    this.transformCoordinates();\n  }\n\n  private transformCoordinates() {\n    let transformedCoordinates: number[];\n\n    if (this.srid === this.mapSrid) {\n      transformedCoordinates = [this.x, this.y];\n    } else {\n      transformedCoordinates = transform([this.x, this.y], this.srid, this.mapSrid);\n    }\n\n    switch (this.host.componentType) {\n      case 'geometry-point':\n        this.host.instance.setCoordinates(transformedCoordinates);\n        break;\n      case 'geometry-circle':\n      case 'view':\n        this.host.instance.setCenter(transformedCoordinates);\n        break;\n      case 'overlay':\n        this.host.instance.setPosition(transformedCoordinates);\n        break;\n    }\n  }\n}\n","import { Component, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\nimport { MapComponent } from './map.component';\nimport { GeometryLinestringComponent } from './geom/geometrylinestring.component';\nimport { GeometryPolygonComponent } from './geom/geometrypolygon.component';\nimport { GeometryMultiPointComponent } from './geom/geometrymultipoint.component';\nimport { GeometryMultiLinestringComponent } from './geom/geometrymultilinestring.component';\nimport { GeometryMultiPolygonComponent } from './geom/geometrymultipolygon.component';\nimport { Coordinate } from 'ol/coordinate';\nimport { transform } from 'ol/proj';\n\n@Component({\n  selector: 'aol-collection-coordinates',\n  template: `\n    <div class=\"aol-collection-coordinates\"></div>\n  `,\n})\nexport class CollectionCoordinatesComponent implements OnChanges, OnInit {\n  private host: any;\n  private mapSrid = 'EPSG:3857';\n\n  @Input()\n  coordinates: Coordinate[] | Coordinate[][] | Coordinate[][][];\n  @Input()\n  srid = 'EPSG:3857';\n\n  constructor(\n    private map: MapComponent,\n    @Optional() geometryLinestring: GeometryLinestringComponent,\n    @Optional() geometryPolygon: GeometryPolygonComponent,\n    @Optional() geometryMultipoint: GeometryMultiPointComponent,\n    @Optional() geometryMultilinestring: GeometryMultiLinestringComponent,\n    @Optional() geometryMultipolygon: GeometryMultiPolygonComponent\n  ) {\n    if (!!geometryLinestring) {\n      this.host = geometryLinestring;\n    } else if (!!geometryPolygon) {\n      this.host = geometryPolygon;\n    } else if (!!geometryMultipoint) {\n      this.host = geometryMultipoint;\n    } else if (!!geometryMultilinestring) {\n      this.host = geometryMultilinestring;\n    } else if (!!geometryMultipolygon) {\n      this.host = geometryMultipolygon;\n    } else {\n      throw new Error('aol-collection-coordinates must be a child of a geometry component');\n    }\n  }\n\n  ngOnInit() {\n    this.map.instance.on('change:view', e => this.onMapViewChanged(e));\n    this.mapSrid = this.map.instance\n      .getView()\n      .getProjection()\n      .getCode();\n    this.transformCoordinates();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.transformCoordinates();\n  }\n\n  private onMapViewChanged(event) {\n    this.mapSrid = event.target\n      .get(event.key)\n      .getProjection()\n      .getCode();\n    this.transformCoordinates();\n  }\n\n  private transformCoordinates() {\n    let transformedCoordinates: Coordinate[] | Coordinate[][] | Coordinate[][][];\n\n    if (this.srid === this.mapSrid) {\n      transformedCoordinates = this.coordinates;\n    } else {\n      switch (this.host.componentType) {\n        case 'geometry-linestring':\n        case 'geometry-multipoint':\n          transformedCoordinates = (<Coordinate[]>this.coordinates).map(c => transform(c, this.srid, this.mapSrid));\n          break;\n        case 'geometry-polygon':\n        case 'geometry-multilinestring':\n          transformedCoordinates = (<Coordinate[][]>this.coordinates).map(cc =>\n            cc.map(c => transform(c, this.srid, this.mapSrid))\n          );\n          break;\n        case 'geometry-multipolygon':\n          transformedCoordinates = (<Coordinate[][][]>this.coordinates).map(ccc =>\n            ccc.map(cc => cc.map(c => transform(c, this.srid, this.mapSrid)))\n          );\n          break;\n      }\n    }\n\n    this.host.instance.setCoordinates(transformedCoordinates);\n  }\n}\n","import { Component, Input, Optional, OnInit } from '@angular/core';\nimport { Fill, Image, Stroke, Style, Text } from 'ol/style';\nimport { Geometry } from 'ol/geom';\nimport { FeatureComponent } from '../feature.component';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { GeometryFunction } from 'ol/style/Style';\n\n@Component({\n  selector: 'aol-style',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class StyleComponent implements OnInit {\n  private host: FeatureComponent | LayerVectorComponent;\n  public instance: Style;\n  public componentType = 'style';\n\n  @Input()\n  geometry: string | Geometry | GeometryFunction;\n  @Input()\n  fill: Fill;\n  @Input()\n  image: Image;\n  @Input()\n  stroke: Stroke;\n  @Input()\n  text: Text;\n  @Input()\n  zIndex: number;\n\n  constructor(@Optional() featureHost: FeatureComponent, @Optional() layerHost: LayerVectorComponent) {\n    // console.log('creating aol-style');\n    this.host = !!featureHost ? featureHost : layerHost;\n    if (!this.host) {\n      throw new Error('aol-style must be applied to a feature or a layer');\n    }\n  }\n\n  update() {\n    // console.log('updating style\\'s host: ', this.host);\n    this.host.instance.changed();\n  }\n\n  ngOnInit() {\n    // console.log('creating aol-style instance with: ', this);\n    this.instance = new Style(this);\n    this.host.instance.setStyle(this.instance);\n  }\n}\n","import { Component, Input, Host, AfterContentInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { AtlasManager, Circle, Fill, Stroke } from 'ol/style';\nimport { StyleComponent } from './style.component';\n\n@Component({\n  selector: 'aol-style-circle',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class StyleCircleComponent implements AfterContentInit, OnChanges, OnDestroy {\n  public componentType = 'style-circle';\n  public instance: Circle;\n\n  @Input()\n  fill: Fill;\n  @Input()\n  radius: number;\n  @Input()\n  snapToPixel: boolean;\n  @Input()\n  stroke: Stroke;\n  @Input()\n  atlasManager: AtlasManager;\n\n  constructor(@Host() private host: StyleComponent) {}\n\n  /**\n   * WORK-AROUND: since the re-rendering is not triggered on style change\n   * we trigger a radius change.\n   * see openlayers #6233 and #5775\n   */\n  update() {\n    if (!!this.instance) {\n      // console.log('setting ol.style.Circle instance\\'s radius');\n      this.instance.setRadius(this.radius);\n    }\n    this.host.update();\n  }\n\n  ngAfterContentInit() {\n    // console.log('creating ol.style.Circle instance with: ', this);\n    this.instance = new Circle(this);\n    this.host.instance.setImage(this.instance);\n    this.host.update();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['radius']) {\n      this.instance.setRadius(changes['radius'].currentValue);\n    }\n    // console.log('changes detected in aol-style-circle, setting new radius: ', changes['radius'].currentValue);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-style-circle');\n    this.host.instance.setImage(null);\n  }\n}\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Text } from 'ol/style';\nimport { StyleComponent } from './style.component';\n\n@Component({\n  selector: 'aol-style-text',\n  template: `\n    <div class=\"aol-style-text\"></div>\n  `,\n})\nexport class StyleTextComponent implements OnInit, OnChanges {\n  public instance: Text;\n  public componentType = 'style-text';\n\n  @Input()\n  font: string | undefined;\n  @Input()\n  offsetX: number | undefined;\n  @Input()\n  offsetY: number | undefined;\n  @Input()\n  scale: number | undefined;\n  @Input()\n  rotateWithView: boolean | undefined;\n  @Input()\n  rotation: number | undefined;\n  @Input()\n  text: string | undefined;\n  @Input()\n  textAlign: string | undefined;\n  @Input()\n  textBaseLine: string | undefined;\n\n  constructor(@Optional() private host: StyleComponent) {\n    if (!host) {\n      throw new Error('aol-style-text must be a descendant of aol-style');\n    }\n    // console.log('creating aol-style-text with: ', this);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.style.Text instance with: ', this);\n    this.instance = new Text(this);\n    this.host.instance.setText(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['font']) {\n      this.instance.setFont(changes['font'].currentValue);\n    }\n    if (changes['offsetX']) {\n      this.instance.setOffsetX(changes['offsetX'].currentValue);\n    }\n    if (changes['offsetY']) {\n      this.instance.setOffsetY(changes['offsetY'].currentValue);\n    }\n    if (changes['scale']) {\n      this.instance.setScale(changes['scale'].currentValue);\n    }\n    if (changes['rotation']) {\n      this.instance.setRotation(changes['rotation'].currentValue);\n    }\n    if (changes['text']) {\n      this.instance.setText(changes['text'].currentValue);\n    }\n    if (changes['textAlign']) {\n      this.instance.setTextAlign(changes['textAlign'].currentValue);\n    }\n    if (changes['textBaseLine']) {\n      this.instance.setTextBaseline(changes['textBaseLine'].currentValue);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-text, setting new properties: ', changes);\n  }\n}\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Stroke } from 'ol/style';\nimport { StyleComponent } from './style.component';\nimport { StyleCircleComponent } from './circle.component';\nimport { StyleTextComponent } from './text.component';\nimport { Color } from 'ol/color';\n\n@Component({\n  selector: 'aol-style-stroke',\n  template: `\n    <div class=\"aol-style-stroke\"></div>\n  `,\n})\nexport class StyleStrokeComponent implements OnInit, OnChanges {\n  public instance: Stroke;\n  /* the typings do not have the setters */\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\n\n  @Input()\n  color: Color | undefined;\n  @Input()\n  lineCap: string | undefined;\n  @Input()\n  lineDash: number[] | undefined;\n  @Input()\n  lineJoin: string | undefined;\n  @Input()\n  miterLimit: number | undefined;\n  @Input()\n  width: number | undefined;\n\n  constructor(\n    @Optional() styleHost: StyleComponent,\n    @Optional() styleCircleHost: StyleCircleComponent,\n    @Optional() styleTextHost: StyleTextComponent\n  ) {\n    if (!styleHost) {\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\n    }\n    if (!!styleTextHost) {\n      this.host = styleTextHost;\n    } else if (!!styleCircleHost) {\n      this.host = styleCircleHost;\n    } else {\n      this.host = styleHost;\n    }\n    // console.log('creating aol-style-stroke with: ', this);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.style.Stroke instance with: ', this);\n    this.instance = new Stroke(this);\n    switch (this.host.componentType) {\n      case 'style':\n        this.host.instance.setStroke(this.instance);\n        // console.log('setting ol.style instance\\'s stroke:', this.host);\n        break;\n      case 'style-text':\n        this.host.instance.setStroke(this.instance);\n        break;\n      case 'style-circle':\n        this.host.stroke = this.instance;\n        // console.log('setting ol.style.circle instance\\'s stroke:', this.host);\n        break;\n      default:\n        throw new Error('unknown host type: ' + this.host);\n      // break;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['color']) {\n      this.instance.setColor(changes['color'].currentValue);\n    }\n    if (changes['lineCap']) {\n      this.instance.setLineCap(changes['lineCap'].currentValue);\n    }\n    if (changes['lineDash']) {\n      this.instance.setLineDash(changes['lineDash'].currentValue);\n    }\n    if (changes['lineJoin']) {\n      this.instance.setLineJoin(changes['lineJoin'].currentValue);\n    }\n    if (changes['miterLimit']) {\n      this.instance.setMiterLimit(changes['miterLimit'].currentValue);\n    }\n    if (changes['width']) {\n      this.instance.setWidth(changes['width'].currentValue);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-stroke, setting new properties: ', changes);\n  }\n}\n","import { Component, Input, Host, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Icon } from 'ol/style';\nimport IconAnchorUnits from 'ol/style/IconAnchorUnits';\nimport IconOrigin from 'ol/style/IconOrigin';\nimport { StyleComponent } from './style.component';\n\n@Component({\n  selector: 'aol-style-icon',\n  template: `\n    <div class=\"aol-style-icon\"></div>\n  `,\n})\nexport class StyleIconComponent implements OnInit, OnChanges {\n  public instance: Icon;\n\n  @Input()\n  anchor: [number, number];\n  @Input()\n  anchorXUnits: IconAnchorUnits;\n  @Input()\n  anchorYUnits: IconAnchorUnits;\n  @Input()\n  anchorOrigin: IconOrigin;\n  @Input()\n  color: [number, number, number, number];\n  @Input()\n  crossOrigin: IconOrigin;\n  @Input()\n  img: string;\n  @Input()\n  offset: [number, number];\n  @Input()\n  offsetOrigin: IconOrigin;\n  @Input()\n  opacity: number;\n  @Input()\n  scale: number;\n  @Input()\n  snapToPixel: boolean;\n  @Input()\n  rotateWithView: boolean;\n  @Input()\n  rotation: number;\n  @Input()\n  size: [number, number];\n  @Input()\n  imgSize: [number, number];\n  @Input()\n  src: string;\n\n  constructor(@Host() private host: StyleComponent) {}\n\n  ngOnInit() {\n    // console.log('creating ol.style.Icon instance with: ', this);\n    this.instance = new Icon(this);\n    this.host.instance.setImage(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['opacity']) {\n      this.instance.setOpacity(changes['opacity'].currentValue);\n    }\n    if (changes['rotation']) {\n      this.instance.setRotation(changes['rotation'].currentValue);\n    }\n    if (changes['scale']) {\n      this.instance.setScale(changes['scale'].currentValue);\n    }\n    if (changes['src']) {\n      this.instance = new Icon(this);\n      this.host.instance.setImage(this.instance);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-icon: ', changes);\n  }\n}\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Fill } from 'ol/style';\nimport { StyleComponent } from './style.component';\nimport { StyleCircleComponent } from './circle.component';\nimport { StyleTextComponent } from './text.component';\nimport { Color } from 'ol/color';\nimport { ColorLike } from 'ol/colorlike';\n\n@Component({\n  selector: 'aol-style-fill',\n  template: `\n    <div class=\"aol-style-fill\"></div>\n  `,\n})\nexport class StyleFillComponent implements OnInit, OnChanges {\n  /* the typings do not have the setters */\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\n  public instance: Fill;\n\n  @Input()\n  color: Color | ColorLike;\n\n  constructor(\n    @Optional() styleHost: StyleComponent,\n    @Optional() styleCircleHost: StyleCircleComponent,\n    @Optional() styleTextHost: StyleTextComponent\n  ) {\n    if (!styleHost) {\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\n    }\n    if (!!styleTextHost) {\n      this.host = styleTextHost;\n    } else if (!!styleCircleHost) {\n      this.host = styleCircleHost;\n    } else {\n      this.host = styleHost;\n    }\n    // console.log('creating aol-style-fill with: ', this);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.style.Fill instance with: ', this);\n    this.instance = new Fill(this);\n    switch (this.host.componentType) {\n      case 'style':\n        this.host.instance.setFill(this.instance);\n        // console.log('setting ol.style instance\\'s fill:', this.host);\n        break;\n      case 'style-text':\n        this.host.instance.setFill(this.instance);\n        break;\n      case 'style-circle':\n        this.host.fill = this.instance;\n        // console.log('setting ol.style.circle instance\\'s fill:', this.host);\n        break;\n      default:\n        throw new Error('unknown host type: ' + this.host);\n      // break;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['color']) {\n      this.instance.setColor(changes['color'].currentValue);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-fill, setting new color: ', changes);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { Control, defaults } from 'ol/control';\nimport { Collection } from 'ol';\nimport { Options as AttributionOptions } from 'ol/control/Attribution';\nimport { Options as RotateOptions } from 'ol/control/Rotate';\nimport { Options as ZoomOptions } from 'ol/control/Zoom';\n\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-defaults',\n  template: '',\n})\nexport class DefaultControlComponent implements OnInit, OnDestroy {\n  instance: Collection<Control>;\n  @Input()\n  attribution: boolean;\n  @Input()\n  attributionOptions: AttributionOptions;\n  @Input()\n  rotate: boolean;\n  @Input()\n  rotateOptions: RotateOptions;\n  @Input()\n  zoom: boolean;\n  @Input()\n  zoomOptions: ZoomOptions;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    // console.log('ol.control.defaults init: ', this);\n    this.instance = defaults(this);\n    this.instance.forEach(c => this.map.instance.addControl(c));\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-defaults');\n    this.instance.forEach(c => this.map.instance.removeControl(c));\n  }\n}\n","import { Component, ContentChild, OnDestroy, OnInit } from '@angular/core';\nimport { Control } from 'ol/control';\nimport { MapComponent } from '../map.component';\nimport { ContentComponent } from '../content.component';\n\n@Component({\n  selector: 'aol-control',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlComponent implements OnInit, OnDestroy {\n  public componentType = 'control';\n  instance: Control;\n  element: Element;\n  @ContentChild(ContentComponent)\n  content: ContentComponent;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    if (this.content) {\n      this.element = this.content.elementRef.nativeElement;\n      this.instance = new Control(this);\n      this.map.instance.addControl(this.instance);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.instance) {\n      this.map.instance.removeControl(this.instance);\n    }\n  }\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Attribution } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-attribution',\n  template: ``,\n})\nexport class ControlAttributionComponent implements OnInit, OnDestroy {\n  public componentType = 'control';\n  instance: Attribution;\n  target: Element;\n  @Input()\n  collapsible: boolean;\n\n  constructor(private map: MapComponent, private element: ElementRef) {}\n\n  ngOnInit() {\n    this.target = this.element.nativeElement;\n    // console.log('ol.control.Attribution init: ', this);\n    this.instance = new Attribution(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-attribution');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FullScreen } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-fullscreen',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlFullScreenComponent implements OnInit, OnDestroy {\n  instance: FullScreen;\n\n  @Input()\n  className: string;\n  @Input()\n  label: string;\n  @Input()\n  labelActive: string;\n  @Input()\n  tipLabel: string;\n  @Input()\n  keys: boolean;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-fullscreen');\n  }\n\n  ngOnInit() {\n    this.instance = new FullScreen(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-fullscreen');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport MousePosition from 'ol/control/MousePosition';\nimport { MapComponent } from '../map.component';\nimport { CoordinateFormat } from 'ol/coordinate';\nimport { ProjectionLike } from 'ol/proj';\n\n@Component({\n  selector: 'aol-control-mouseposition',\n  template: ``,\n})\nexport class ControlMousePositionComponent implements OnInit, OnDestroy {\n  instance: MousePosition;\n  @Input()\n  coordinateFormat: CoordinateFormat;\n  @Input()\n  projection: ProjectionLike;\n  target: Element;\n\n  constructor(private map: MapComponent, private element: ElementRef) {}\n\n  ngOnInit() {\n    this.target = this.element.nativeElement;\n    // console.log('ol.control.MousePosition init: ', this);\n    this.instance = new MousePosition(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-mouseposition');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Layer } from 'ol/layer';\nimport { View } from 'ol';\nimport { OverviewMap } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-overviewmap',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlOverviewMapComponent implements OnInit, OnChanges, OnDestroy {\n  instance: OverviewMap;\n  @Input()\n  collapsed: boolean;\n  @Input()\n  collapseLabel: string;\n  @Input()\n  collapsible: boolean;\n  @Input()\n  label: string;\n  @Input()\n  layers: Layer[];\n  @Input()\n  target: Element;\n  @Input()\n  tipLabel: string;\n  @Input()\n  view: View;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new OverviewMap(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeControl(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance != null && changes.hasOwnProperty('view')) {\n      this.reloadInstance();\n    }\n  }\n\n  private reloadInstance() {\n    this.map.instance.removeControl(this.instance);\n    this.instance = new OverviewMap(this);\n    this.map.instance.addControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Rotate } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-rotate',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlRotateComponent implements OnInit, OnDestroy {\n  instance: Rotate;\n\n  @Input()\n  className: string;\n  @Input()\n  label: string;\n  @Input()\n  tipLabel: string;\n  @Input()\n  duration: number;\n  @Input()\n  autoHide: boolean;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-rotate');\n  }\n\n  ngOnInit() {\n    this.instance = new Rotate(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-rotate');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ScaleLine } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-scaleline',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlScaleLineComponent implements OnInit, OnDestroy {\n  instance: ScaleLine;\n  @Input()\n  units: string;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-scaleline');\n  }\n\n  ngOnInit() {\n    this.instance = new ScaleLine(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-scaleline');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Zoom } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-zoom',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlZoomComponent implements OnInit, OnDestroy {\n  instance: Zoom;\n\n  @Input()\n  duration: number;\n  @Input()\n  zoomInLabel: string | Node;\n  @Input()\n  zoomOutLabel: string | Node;\n  @Input()\n  zoomInTipLabel: string;\n  @Input()\n  zoomOutTipLabel: string;\n  @Input()\n  delta: number;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-zoom');\n  }\n\n  ngOnInit() {\n    this.instance = new Zoom(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-zoom');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ZoomSlider } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-zoomslider',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlZoomSliderComponent implements OnInit, OnDestroy {\n  instance: ZoomSlider;\n\n  @Input()\n  className: string;\n  @Input()\n  duration: number;\n  @Input()\n  maxResolution: number;\n  @Input()\n  minResolution: number;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-zoomslider');\n  }\n\n  ngOnInit() {\n    this.instance = new ZoomSlider(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-zoomslider');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ZoomToExtent } from 'ol/control';\nimport { MapComponent } from '../map.component';\nimport { Extent } from 'ol/extent';\n\n@Component({\n  selector: 'aol-control-zoomtoextent',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlZoomToExtentComponent implements OnInit, OnDestroy {\n  instance: ZoomToExtent;\n\n  @Input()\n  className: string;\n  @Input()\n  label: string | Node;\n  @Input()\n  tipLabel: string;\n  @Input()\n  extent: Extent;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-zoomtoextent');\n  }\n\n  ngOnInit() {\n    this.instance = new ZoomToExtent(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-zoomtoextent');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { FormatComponent } from './format.component';\nimport { MVT } from 'ol/format';\nimport { Geometry } from 'ol/geom';\nimport GeometryType from 'ol/geom/GeometryType';\n\n@Component({\n  selector: 'aol-format-mvt',\n  template: '',\n  providers: [{ provide: FormatComponent, useExisting: forwardRef(() => FormatMVTComponent) }],\n})\nexport class FormatMVTComponent extends FormatComponent {\n  instance: MVT;\n\n  @Input()\n  featureClass:\n    | ((geom: Geometry | { [k: string]: any }) => any)\n    | ((geom: GeometryType, arg2: number[], arg3: number[] | number[][], arg4: { [k: string]: any }) => any);\n  @Input()\n  geometryName: string;\n  @Input()\n  layerName: string;\n  @Input()\n  layers: string[];\n\n  constructor() {\n    super();\n    this.instance = new MVT(this);\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { defaults, Interaction } from 'ol/interaction';\nimport { Collection } from 'ol';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-default',\n  template: '',\n})\nexport class DefaultInteractionComponent implements OnInit, OnDestroy {\n  instance: Collection<Interaction>;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = defaults();\n    this.instance.forEach(i => this.map.instance.addInteraction(i));\n  }\n\n  ngOnDestroy() {\n    this.instance.forEach(i => this.map.instance.removeInteraction(i));\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { DoubleClickZoom } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-doubleclickzoom',\n  template: '',\n})\nexport class DoubleClickZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: DoubleClickZoom;\n\n  @Input()\n  duration: number;\n  @Input()\n  delta: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DoubleClickZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { DragAndDrop } from 'ol/interaction';\nimport Feature from 'ol/format/Feature';\nimport { MapComponent } from '../map.component';\nimport { ProjectionLike } from 'ol/proj';\n\n@Component({\n  selector: 'aol-interaction-draganddrop',\n  template: '',\n})\nexport class DragAndDropInteractionComponent implements OnInit, OnDestroy {\n  instance: DragAndDrop;\n\n  @Input()\n  formatConstructors: ((n: Feature) => any)[];\n  @Input()\n  projection: ProjectionLike;\n  @Input()\n  target: Element;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragAndDrop(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { DragBox } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\nimport { Condition } from 'ol/events/condition';\nimport { EndCondition } from 'ol/interaction/DragBox';\n\n@Component({\n  selector: 'aol-interaction-dragbox',\n  template: '',\n})\nexport class DragBoxInteractionComponent implements OnInit, OnDestroy {\n  instance: DragBox;\n\n  @Input()\n  className: string;\n  @Input()\n  condition: Condition;\n  @Input()\n  boxEndCondition: EndCondition;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragBox(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { DragPan } from 'ol/interaction';\nimport Kinetic from 'ol/Kinetic';\nimport { MapComponent } from '../map.component';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-dragpan',\n  template: '',\n})\nexport class DragPanInteractionComponent implements OnInit, OnDestroy {\n  instance: DragPan;\n\n  @Input()\n  condition: Condition;\n  @Input()\n  kinetic: Kinetic;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragPan(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { DragRotate } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-dragrotate',\n  template: '',\n})\nexport class DragRotateInteractionComponent implements OnInit, OnDestroy {\n  instance: DragRotate;\n\n  @Input()\n  condition: Condition;\n  @Input()\n  duration: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragRotate(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { DragRotateAndZoom } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-dragrotateandzoom',\n  template: '',\n})\nexport class DragRotateAndZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: DragRotateAndZoom;\n\n  @Input()\n  condition: Condition;\n  @Input()\n  duration: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragRotateAndZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { DragZoom } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-dragzoom',\n  template: '',\n})\nexport class DragZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: DragZoom;\n\n  @Input()\n  className: string;\n  @Input()\n  condition: Condition;\n  @Input()\n  duration: number;\n  @Input()\n  out: boolean;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { MouseWheelZoom } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-mousewheelzoom',\n  template: '',\n})\nexport class MouseWheelZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: MouseWheelZoom;\n  @Input()\n  duration: number;\n  @Input()\n  timeout: number;\n  @Input()\n  useAnchor: boolean;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new MouseWheelZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { PinchZoom } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-pinchzoom',\n  template: '',\n})\nexport class PinchZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: PinchZoom;\n\n  @Input()\n  duration: number;\n  @Input()\n  constrainResolution: boolean;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new PinchZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit, EventEmitter, Output } from '@angular/core';\nimport { MapComponent } from '../map.component';\nimport { Draw } from 'ol/interaction';\nimport { Collection, Feature } from 'ol';\nimport { Vector } from 'ol/source';\nimport GeometryType from 'ol/geom/GeometryType';\nimport { Style } from 'ol/style';\nimport { DrawEvent, GeometryFunction } from 'ol/interaction/Draw';\nimport { StyleFunction } from 'ol/style/Style';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-draw',\n  template: '',\n})\nexport class DrawInteractionComponent implements OnInit, OnDestroy {\n  instance: Draw;\n\n  @Input()\n  clickTolerance?: number;\n  @Input()\n  features?: Collection<Feature>;\n  @Input()\n  source?: Vector;\n  @Input()\n  snapTolerance?: number;\n  @Input()\n  type: GeometryType;\n  @Input()\n  maxPoints?: number;\n  @Input()\n  minPoints?: number;\n  @Input()\n  finishCondition?: Condition;\n  @Input()\n  style?: Style | Style[] | StyleFunction;\n  @Input()\n  geometryFunction?: GeometryFunction;\n  @Input()\n  geometryName?: string;\n  @Input()\n  condition?: Condition;\n  @Input()\n  freehandCondition?: Condition;\n  @Input()\n  freehand?: boolean;\n  @Input()\n  wrapX?: boolean;\n\n  @Output()\n  onChange = new EventEmitter<DrawEvent>();\n  @Output()\n  onChangeActive = new EventEmitter<DrawEvent>();\n  @Output()\n  onDrawEnd = new EventEmitter<DrawEvent>();\n  @Output()\n  onDrawStart = new EventEmitter<DrawEvent>();\n  @Output()\n  onPropertyChange = new EventEmitter<DrawEvent>();\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new Draw(this);\n    this.instance.on('change', (event: DrawEvent) => this.onChange.emit(event));\n    this.instance.on('change:active', (event: DrawEvent) => this.onChangeActive.emit(event));\n    this.instance.on('drawend', (event: DrawEvent) => this.onDrawEnd.emit(event));\n    this.instance.on('drawstart', (event: DrawEvent) => this.onDrawStart.emit(event));\n    this.instance.on('propertychange', (event: DrawEvent) => this.onPropertyChange.emit(event));\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MapComponent } from '../map.component';\nimport { Select } from 'ol/interaction';\nimport { Layer } from 'ol/layer';\nimport { Style } from 'ol/style';\nimport { Collection, Feature } from 'ol';\nimport { SelectEvent, FilterFunction } from 'ol/interaction/Select';\nimport { StyleFunction } from 'ol/style/Style';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-select',\n  template: '',\n})\nexport class SelectInteractionComponent implements OnInit, OnDestroy {\n  instance: Select;\n\n  @Input()\n  addCondition?: Condition;\n  @Input()\n  condition?: Condition;\n  @Input()\n  layers?: Layer[] | ((layer: Layer) => boolean);\n  @Input()\n  style?: Style | Style[] | StyleFunction;\n  @Input()\n  removeCondition?: Condition;\n  @Input()\n  toggleCondition?: Condition;\n  @Input()\n  multi?: boolean;\n  @Input()\n  features?: Collection<Feature>;\n  @Input()\n  filter?: FilterFunction;\n  @Input()\n  wrapX?: boolean;\n\n  @Output()\n  onChange = new EventEmitter<SelectEvent>();\n  @Output()\n  onSelect = new EventEmitter<SelectEvent>();\n  @Output()\n  onPropertyChange = new EventEmitter<SelectEvent>();\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new Select(this);\n\n    this.instance.on('change', (event: SelectEvent) => this.onChange.emit(event));\n    this.instance.on('select', (event: SelectEvent) => this.onSelect.emit(event));\n    this.instance.on('propertychange', (event: SelectEvent) => this.onPropertyChange.emit(event));\n\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MapComponent } from '../map.component';\nimport { Modify } from 'ol/interaction';\nimport { Collection, Feature } from 'ol';\nimport { Style } from 'ol/style';\nimport { Vector } from 'ol/source';\nimport { ModifyEvent } from 'ol/interaction/Modify';\nimport { StyleFunction } from 'ol/style/Style';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-modify',\n  template: '',\n})\nexport class ModifyInteractionComponent implements OnInit, OnDestroy {\n  instance: Modify;\n\n  @Input()\n  condition?: Condition;\n  @Input()\n  deleteCondition?: Condition;\n  @Input()\n  pixelTolerance?: number;\n  @Input()\n  style?: Style | Style[] | StyleFunction;\n  @Input()\n  features: Collection<Feature>;\n  @Input()\n  wrapX?: boolean;\n  @Input()\n  source?: Vector;\n\n  @Output()\n  onModifyEnd = new EventEmitter<ModifyEvent>();\n  @Output()\n  onModifyStart = new EventEmitter<ModifyEvent>();\n  @Output()\n  onChange = new EventEmitter<ModifyEvent>();\n  @Output()\n  onChangeActive = new EventEmitter<ModifyEvent>();\n  @Output()\n  onPropertyChange = new EventEmitter<ModifyEvent>();\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new Modify(this);\n    this.instance.on('change', (event: ModifyEvent) => this.onChange.emit(event));\n    this.instance.on('change:active', (event: ModifyEvent) => this.onChangeActive.emit(event));\n    this.instance.on('propertychange', (event: ModifyEvent) => this.onPropertyChange.emit(event));\n    this.instance.on('modifyend', (event: ModifyEvent) => this.onModifyEnd.emit(event));\n    this.instance.on('modifystart', (event: ModifyEvent) => this.onModifyStart.emit(event));\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Translate } from 'ol/interaction';\nimport { Collection, Feature } from 'ol';\nimport { Layer } from 'ol/layer';\nimport { TranslateEvent } from 'ol/interaction/Translate';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-translate',\n  template: '',\n})\nexport class TranslateInteractionComponent implements OnInit, OnDestroy {\n  instance: Translate;\n\n  @Input()\n  features?: Collection<Feature>;\n  @Input()\n  layers?: Layer[] | ((layer: Layer) => boolean);\n  @Input()\n  hitTolerance?: number;\n\n  @Output()\n  onChange: EventEmitter<TranslateEvent>;\n  @Output()\n  onPropertyChange: EventEmitter<TranslateEvent>;\n  @Output()\n  onTranslateEnd: EventEmitter<TranslateEvent>;\n  @Output()\n  onTranslateStart: EventEmitter<TranslateEvent>;\n  @Output()\n  onTranslating: EventEmitter<TranslateEvent>;\n\n  constructor(private map: MapComponent) {\n    this.onChange = new EventEmitter<TranslateEvent>();\n    this.onPropertyChange = new EventEmitter<TranslateEvent>();\n    this.onTranslateEnd = new EventEmitter<TranslateEvent>();\n    this.onTranslateStart = new EventEmitter<TranslateEvent>();\n    this.onTranslating = new EventEmitter<TranslateEvent>();\n  }\n\n  ngOnInit() {\n    this.instance = new Translate(this);\n\n    this.instance.on('change', (event: TranslateEvent) => this.onChange.emit(event));\n    this.instance.on('propertychange', (event: TranslateEvent) => this.onPropertyChange.emit(event));\n    this.instance.on('translateend', (event: TranslateEvent) => this.onTranslateEnd.emit(event));\n    this.instance.on('translatestart', (event: TranslateEvent) => this.onTranslateStart.emit(event));\n    this.instance.on('translating', (event: TranslateEvent) => this.onTranslating.emit(event));\n\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, ElementRef, OnInit } from '@angular/core';\nimport { Attribution } from 'ol/control';\n\n@Component({\n  selector: 'aol-attribution',\n  template: '<ng-content></ng-content>',\n})\nexport class AttributionComponent implements OnInit {\n  instance: Attribution;\n  html: string;\n\n  constructor(private elementRef: ElementRef) {}\n\n  ngOnInit() {\n    this.html = this.elementRef.nativeElement.innerHTML;\n    this.instance = new Attribution(this);\n  }\n}\n","import { AfterViewInit, Component, ContentChildren, Host, QueryList } from '@angular/core';\nimport { Attribution } from 'ol/control';\nimport { SourceComponent } from './sources/source.component';\nimport { AttributionComponent } from './attribution.component';\n\n@Component({\n  selector: 'aol-attributions',\n  template: '<ng-content></ng-content>',\n})\nexport class AttributionsComponent implements AfterViewInit {\n  instance: Array<Attribution>;\n\n  @ContentChildren(AttributionComponent)\n  attributions: QueryList<AttributionComponent>;\n\n  constructor(@Host() private source: SourceComponent) {}\n\n  /* we can do this at the very end */\n  ngAfterViewInit() {\n    if (this.attributions.length) {\n      this.instance = this.attributions.map(cmp => cmp.instance);\n      // console.log('setting attributions:', this.instance);\n      this.source.instance.setAttributions(this.instance);\n    }\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { SourceComponent } from './source.component';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { UTFGrid } from 'ol/source';\n\n@Component({\n  selector: 'aol-source-utfgrid',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceUTFGridComponent) }],\n})\nexport class SourceUTFGridComponent extends SourceComponent implements OnInit {\n  instance: UTFGrid;\n  @Input() tileJSON: JSON;\n  @Input() url: string;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new UTFGrid(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","/*\n * Public API Surface of ngx-openlayers\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ViewComponent } from './lib/view.component';\nimport { GraticuleComponent } from './lib/graticule.component';\nimport { LayerGroupComponent } from './lib/layers/layergroup.component';\nimport { LayerImageComponent } from './lib/layers/layerimage.component';\nimport { LayerTileComponent } from './lib/layers/layertile.component';\nimport { MapComponent } from './lib/map.component';\nimport { LayerVectorComponent } from './lib/layers/layervector.component';\nimport { LayerVectorTileComponent } from './lib/layers/layervectortile.component';\nimport { SourceOsmComponent } from './lib/sources/osm.component';\nimport { SourceBingmapsComponent } from './lib/sources/bingmaps.component';\nimport { SourceClusterComponent } from './lib/sources/cluster.component';\nimport { SourceVectorComponent } from './lib/sources/vector.component';\nimport { SourceXYZComponent } from './lib/sources/xyz.component';\nimport { SourceTileWMTSComponent } from './lib/sources/tilewmts.component';\nimport { SourceVectorTileComponent } from './lib/sources/vectortile.component';\nimport { SourceTileWMSComponent } from './lib/sources/tilewms.component';\nimport { SourceTileJSONComponent } from './lib/sources/tilejson.component';\nimport { SourceGeoJSONComponent } from './lib/sources/geojson.component';\nimport { SourceImageStaticComponent } from './lib/sources/imagestatic.component';\nimport { SourceImageWMSComponent } from './lib/sources/imagewms.component';\nimport { SourceImageArcGISRestComponent } from './lib/sources/imagearcgisrest.component';\nimport { SourceRasterComponent } from './lib/sources/raster.component';\nimport { FeatureComponent } from './lib/feature.component';\nimport { GeometryCircleComponent } from './lib/geom/geometrycircle.component';\nimport { GeometryLinestringComponent } from './lib/geom/geometrylinestring.component';\nimport { GeometryMultiLinestringComponent } from './lib/geom/geometrymultilinestring.component';\nimport { GeometryMultiPointComponent } from './lib/geom/geometrymultipoint.component';\nimport { GeometryMultiPolygonComponent } from './lib/geom/geometrymultipolygon.component';\nimport { GeometryPointComponent } from './lib/geom/geometrypoint.component';\nimport { GeometryPolygonComponent } from './lib/geom/geometrypolygon.component';\nimport { CoordinateComponent } from './lib/coordinate.component';\nimport { CollectionCoordinatesComponent } from './lib/collectioncoordinates.component';\nimport { StyleComponent } from './lib/styles/style.component';\nimport { StyleCircleComponent } from './lib/styles/circle.component';\nimport { StyleStrokeComponent } from './lib/styles/stroke.component';\nimport { StyleIconComponent } from './lib/styles/icon.component';\nimport { StyleFillComponent } from './lib/styles/fill.component';\nimport { StyleTextComponent } from './lib/styles/text.component';\nimport { DefaultControlComponent } from './lib/controls/default.component';\nimport { ControlComponent } from './lib/controls/control.component';\nimport { ControlAttributionComponent } from './lib/controls/attribution.component';\nimport { ControlFullScreenComponent } from './lib/controls/fullscreen.component';\nimport { ControlMousePositionComponent } from './lib/controls/mouseposition.component';\nimport { ControlOverviewMapComponent } from './lib/controls/overviewmap.component';\nimport { ControlRotateComponent } from './lib/controls/rotate.component';\nimport { ControlScaleLineComponent } from './lib/controls/scaleline.component';\nimport { ControlZoomComponent } from './lib/controls/zoom.component';\nimport { ControlZoomSliderComponent } from './lib/controls/zoomslider.component';\nimport { ControlZoomToExtentComponent } from './lib/controls/zoomtoextent.component';\nimport { FormatMVTComponent } from './lib/formats/mvt.component';\nimport { TileGridComponent } from './lib/tilegrid.component';\nimport { TileGridWMTSComponent } from './lib/tilegridwmts.component';\nimport { DefaultInteractionComponent } from './lib/interactions/default.component';\nimport { DoubleClickZoomInteractionComponent } from './lib/interactions/doubleclickzoom.component';\nimport { DragAndDropInteractionComponent } from './lib/interactions/draganddrop.component';\nimport { DragBoxInteractionComponent } from './lib/interactions/dragbox.component';\nimport { DragPanInteractionComponent } from './lib/interactions/dragpan.component';\nimport { DragRotateInteractionComponent } from './lib/interactions/dragrotate.component';\nimport { DragRotateAndZoomInteractionComponent } from './lib/interactions/dragrotateandzoom.component';\nimport { DragZoomInteractionComponent } from './lib/interactions/dragzoom.component';\nimport { MouseWheelZoomInteractionComponent } from './lib/interactions/mousewheelzoom.component';\nimport { PinchZoomInteractionComponent } from './lib/interactions/pinchzoom.component';\nimport { DrawInteractionComponent } from './lib/interactions/draw.component';\nimport { SelectInteractionComponent } from './lib/interactions/select.component';\nimport { ModifyInteractionComponent } from './lib/interactions/modify.component';\nimport { TranslateInteractionComponent } from './lib/interactions/translate.component';\nimport { OverlayComponent } from './lib/overlay.component';\nimport { ContentComponent } from './lib/content.component';\nimport { AttributionsComponent } from './lib/attributions.component';\nimport { AttributionComponent } from './lib/attribution.component';\nimport { SourceUTFGridComponent } from './lib/sources/utfgrid.component';\n\nexport {\n  MapComponent,\n  ViewComponent,\n  GraticuleComponent,\n  LayerGroupComponent,\n  LayerImageComponent,\n  LayerTileComponent,\n  LayerVectorComponent,\n  LayerVectorTileComponent,\n  SourceOsmComponent,\n  SourceBingmapsComponent,\n  SourceClusterComponent,\n  SourceUTFGridComponent,\n  SourceVectorComponent,\n  SourceXYZComponent,\n  SourceVectorTileComponent,\n  SourceTileWMSComponent,\n  SourceTileWMTSComponent,\n  SourceTileJSONComponent,\n  SourceGeoJSONComponent,\n  SourceImageStaticComponent,\n  SourceImageWMSComponent,\n  SourceRasterComponent,\n  SourceImageArcGISRestComponent,\n  FeatureComponent,\n  GeometryLinestringComponent,\n  GeometryMultiLinestringComponent,\n  GeometryMultiPointComponent,\n  GeometryMultiPolygonComponent,\n  GeometryPointComponent,\n  GeometryPolygonComponent,\n  GeometryCircleComponent,\n  CoordinateComponent,\n  CollectionCoordinatesComponent,\n  StyleComponent,\n  StyleCircleComponent,\n  StyleFillComponent,\n  StyleIconComponent,\n  StyleStrokeComponent,\n  StyleTextComponent,\n  DefaultControlComponent,\n  ControlComponent,\n  ControlAttributionComponent,\n  ControlFullScreenComponent,\n  ControlMousePositionComponent,\n  ControlOverviewMapComponent,\n  ControlRotateComponent,\n  ControlScaleLineComponent,\n  ControlZoomComponent,\n  ControlZoomSliderComponent,\n  ControlZoomToExtentComponent,\n  FormatMVTComponent,\n  TileGridComponent,\n  TileGridWMTSComponent,\n  DefaultInteractionComponent,\n  DoubleClickZoomInteractionComponent,\n  DragAndDropInteractionComponent,\n  DragBoxInteractionComponent,\n  DragPanInteractionComponent,\n  DragRotateInteractionComponent,\n  DragRotateAndZoomInteractionComponent,\n  DragZoomInteractionComponent,\n  MouseWheelZoomInteractionComponent,\n  PinchZoomInteractionComponent,\n  DrawInteractionComponent,\n  SelectInteractionComponent,\n  ModifyInteractionComponent,\n  TranslateInteractionComponent,\n  OverlayComponent,\n  ContentComponent,\n  AttributionsComponent,\n  AttributionComponent,\n};\n\nconst COMPONENTS = [\n  MapComponent,\n\n  ViewComponent,\n  GraticuleComponent,\n\n  LayerGroupComponent,\n  LayerImageComponent,\n  LayerTileComponent,\n  LayerVectorComponent,\n  LayerVectorTileComponent,\n\n  SourceOsmComponent,\n  SourceBingmapsComponent,\n  SourceClusterComponent,\n  SourceUTFGridComponent,\n  SourceVectorComponent,\n  SourceXYZComponent,\n  SourceVectorTileComponent,\n  SourceTileWMSComponent,\n  SourceTileWMTSComponent,\n  SourceTileJSONComponent,\n  SourceGeoJSONComponent,\n  SourceImageStaticComponent,\n  SourceImageWMSComponent,\n  SourceImageArcGISRestComponent,\n  SourceRasterComponent,\n  FeatureComponent,\n  GeometryLinestringComponent,\n  GeometryMultiLinestringComponent,\n  GeometryMultiPointComponent,\n  GeometryMultiPolygonComponent,\n  GeometryPointComponent,\n  GeometryPolygonComponent,\n  GeometryCircleComponent,\n  CoordinateComponent,\n  CollectionCoordinatesComponent,\n\n  StyleComponent,\n  StyleCircleComponent,\n  StyleFillComponent,\n  StyleIconComponent,\n  StyleStrokeComponent,\n  StyleTextComponent,\n\n  DefaultControlComponent,\n  ControlComponent,\n  ControlAttributionComponent,\n  ControlFullScreenComponent,\n  ControlMousePositionComponent,\n  ControlOverviewMapComponent,\n  ControlRotateComponent,\n  ControlScaleLineComponent,\n  ControlZoomComponent,\n  ControlZoomSliderComponent,\n  ControlZoomToExtentComponent,\n\n  FormatMVTComponent,\n  TileGridComponent,\n  TileGridWMTSComponent,\n\n  DefaultInteractionComponent,\n  DoubleClickZoomInteractionComponent,\n  DragAndDropInteractionComponent,\n  DragBoxInteractionComponent,\n  DragPanInteractionComponent,\n  DragRotateInteractionComponent,\n  DragRotateAndZoomInteractionComponent,\n  DragZoomInteractionComponent,\n  MouseWheelZoomInteractionComponent,\n  PinchZoomInteractionComponent,\n  DrawInteractionComponent,\n  SelectInteractionComponent,\n  ModifyInteractionComponent,\n  TranslateInteractionComponent,\n\n  OverlayComponent,\n  ContentComponent,\n  AttributionsComponent,\n  AttributionComponent,\n];\n\n@NgModule({\n  declarations: COMPONENTS,\n  imports: [CommonModule],\n  exports: COMPONENTS,\n})\nexport class AngularOpenlayersModule {}\n"],"names":["tslib_1.__extends","Vector","WMTS","VectorTile","Circle","defaults"],"mappings":"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"}
