{"version":3,"sources":["ng://ngx-openlayers/lib/map.component.ts","ng://ngx-openlayers/lib/view.component.ts","ng://ngx-openlayers/lib/graticule.component.ts","node_modules/tslib/tslib.es6.js","ng://ngx-openlayers/lib/layers/layer.component.ts","ng://ngx-openlayers/lib/layers/layergroup.component.ts","ng://ngx-openlayers/lib/layers/layerimage.component.ts","ng://ngx-openlayers/lib/layers/layertile.component.ts","ng://ngx-openlayers/lib/layers/layervector.component.ts","ng://ngx-openlayers/lib/layers/layervectortile.component.ts","ng://ngx-openlayers/lib/sources/source.component.ts","ng://ngx-openlayers/lib/tilegrid.component.ts","ng://ngx-openlayers/lib/sources/raster.component.ts","ng://ngx-openlayers/lib/sources/xyz.component.ts","ng://ngx-openlayers/lib/sources/osm.component.ts","ng://ngx-openlayers/lib/sources/bingmaps.component.ts","ng://ngx-openlayers/lib/sources/vector.component.ts","ng://ngx-openlayers/lib/sources/cluster.component.ts","ng://ngx-openlayers/lib/tilegridwmts.component.ts","ng://ngx-openlayers/lib/sources/tilewmts.component.ts","ng://ngx-openlayers/lib/formats/format.component.ts","ng://ngx-openlayers/lib/sources/vectortile.component.ts","ng://ngx-openlayers/lib/sources/tilewms.component.ts","ng://ngx-openlayers/lib/sources/tilejson.component.ts","ng://ngx-openlayers/lib/sources/geojson.component.ts","ng://ngx-openlayers/lib/sources/imagestatic.component.ts","ng://ngx-openlayers/lib/sources/imagewms.component.ts","ng://ngx-openlayers/lib/sources/imagearcgisrest.component.ts","ng://ngx-openlayers/lib/feature.component.ts","ng://ngx-openlayers/lib/geom/simplegeometry.component.ts","ng://ngx-openlayers/lib/geom/geometrycircle.component.ts","ng://ngx-openlayers/lib/geom/geometrylinestring.component.ts","ng://ngx-openlayers/lib/geom/geometrymultilinestring.component.ts","ng://ngx-openlayers/lib/geom/geometrymultipoint.component.ts","ng://ngx-openlayers/lib/geom/geometrymultipolygon.component.ts","ng://ngx-openlayers/lib/geom/geometrypoint.component.ts","ng://ngx-openlayers/lib/geom/geometrypolygon.component.ts","ng://ngx-openlayers/lib/content.component.ts","ng://ngx-openlayers/lib/overlay.component.ts","ng://ngx-openlayers/lib/coordinate.component.ts","ng://ngx-openlayers/lib/collectioncoordinates.component.ts","ng://ngx-openlayers/lib/styles/style.component.ts","ng://ngx-openlayers/lib/styles/circle.component.ts","ng://ngx-openlayers/lib/styles/text.component.ts","ng://ngx-openlayers/lib/styles/stroke.component.ts","ng://ngx-openlayers/lib/styles/icon.component.ts","ng://ngx-openlayers/lib/styles/fill.component.ts","ng://ngx-openlayers/lib/controls/default.component.ts","ng://ngx-openlayers/lib/controls/control.component.ts","ng://ngx-openlayers/lib/controls/attribution.component.ts","ng://ngx-openlayers/lib/controls/fullscreen.component.ts","ng://ngx-openlayers/lib/controls/mouseposition.component.ts","ng://ngx-openlayers/lib/controls/overviewmap.component.ts","ng://ngx-openlayers/lib/controls/rotate.component.ts","ng://ngx-openlayers/lib/controls/scaleline.component.ts","ng://ngx-openlayers/lib/controls/zoom.component.ts","ng://ngx-openlayers/lib/controls/zoomslider.component.ts","ng://ngx-openlayers/lib/controls/zoomtoextent.component.ts","ng://ngx-openlayers/lib/formats/mvt.component.ts","ng://ngx-openlayers/lib/interactions/default.component.ts","ng://ngx-openlayers/lib/interactions/freeboard.component.ts","ng://ngx-openlayers/lib/interactions/doubleclickzoom.component.ts","ng://ngx-openlayers/lib/interactions/draganddrop.component.ts","ng://ngx-openlayers/lib/interactions/dragbox.component.ts","ng://ngx-openlayers/lib/interactions/dragpan.component.ts","ng://ngx-openlayers/lib/interactions/dragrotate.component.ts","ng://ngx-openlayers/lib/interactions/dragrotateandzoom.component.ts","ng://ngx-openlayers/lib/interactions/dragzoom.component.ts","ng://ngx-openlayers/lib/interactions/mousewheelzoom.component.ts","ng://ngx-openlayers/lib/interactions/pinchzoom.component.ts","ng://ngx-openlayers/lib/interactions/draw.component.ts","ng://ngx-openlayers/lib/interactions/select.component.ts","ng://ngx-openlayers/lib/interactions/modify.component.ts","ng://ngx-openlayers/lib/interactions/translate.component.ts","ng://ngx-openlayers/lib/attribution.component.ts","ng://ngx-openlayers/lib/attributions.component.ts","ng://ngx-openlayers/lib/sources/utfgrid.component.ts","ng://ngx-openlayers/public_api.ts"],"names":["MapComponent","prototype","ngOnInit","_this","this","instance","Map","setTarget","host","nativeElement","firstElementChild","on","event","onClick","emit","onDblClick","onMoveEnd","onPointerDrag","onPointerMove","onPostCompose","onPostRender","onPreCompose","onPropertyChange","onSingleClick","ngOnChanges","changes","properties","key","hasOwnProperty","currentValue","setProperties","ngAfterViewInit","updateSize","Component","args","selector","template","ElementRef","Input","Output","componentType","width","height","controls","interactions","EventEmitter","ViewComponent","View","setView","onChangeZoom","onChangeResolution","onChangeCenter","zoomAnimation","setZoom","animate","ngOnDestroy","GraticuleComponent","Graticule","setMap","map","ngAfterContentInit","strokeStyle","showLabels","lonLabelPosition","latLabelPosition","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","__extends","__","constructor","create","LayerComponent","precompose","undefined","postcompose","getLayers","push","remove","un","previousValue","tslib_1.__extends","LayerGroupComponent","Group","_super","call","decorators","type","SkipSelf","Optional","group","LayerImageComponent","Image","LayerTileComponent","Tile","LayerVectorComponent","Vector","LayerVectorTileComponent","VectorTile","SourceComponent","setSource","raster","sources","_register","s","init","TileGridComponent","resolutions","TileGrid","createXYZ","SourceRasterComponent","Raster","beforeOperations","afterOperations","providers","provide","useExisting","forwardRef","Host","layer","SourceXYZComponent","tileGridXYZ","tileGrid","XYZ","tileLoadStart","tileLoadEnd","tileLoadError","ContentChild","SourceOsmComponent","OSM","SourceBingmapsComponent","BingMaps","imagerySet","SourceVectorComponent","SourceClusterComponent","source","sourceVectorComponent","Cluster","setDistance","distance","TileGridWMTSComponent","WMTS","SourceTileWMTSComponent","url","setLayerSource","tileGridWMTS","FormatComponent","SourceVectorTileComponent","format","formatComponent","tileGridComponent","SourceTileWMSComponent","TileWMS","updateParams","params","SourceTileJSONComponent","TileJSON","SourceGeoJSONComponent","GeoJSON","SourceImageStaticComponent","ImageStatic","onImageLoadStart","onImageLoadEnd","onImageLoadError","SourceImageWMSComponent","ImageWMS","SourceImageArcGISRestComponent","ImageArcGISRest","ratio","FeatureComponent","Feature","id","setId","addFeature","removeFeature","SimpleGeometryComponent","setGeometry","defineProperty","GeometryCircleComponent","getRadius","radius","setRadius","Circle","GeometryLinestringComponent","LineString","GeometryMultiLinestringComponent","MultiLineString","GeometryMultiPointComponent","MultiPoint","GeometryMultiPolygonComponent","MultiPolygon","GeometryPointComponent","Point","GeometryPolygonComponent","Polygon","ContentComponent","elementRef","OverlayComponent","content","element","Overlay","addOverlay","removeOverlay","CoordinateComponent","e","onMapViewChanged","mapSrid","getView","getProjection","getCode","transformCoordinates","target","get","transformedCoordinates","srid","x","y","transform","setCoordinates","setCenter","setPosition","viewHost","geometryPointHost","geometryCircleHost","overlayHost","CollectionCoordinatesComponent","coordinates","c","cc","ccc","geometryLinestring","geometryPolygon","geometryMultipoint","geometryMultilinestring","geometryMultipolygon","Error","StyleComponent","update","changed","Style","setStyle","featureHost","layerHost","StyleCircleComponent","setImage","StyleTextComponent","Text","setText","setFont","setOffsetX","setOffsetY","setScale","setRotation","setTextAlign","setTextBaseline","StyleStrokeComponent","Stroke","setStroke","stroke","setColor","setLineCap","setLineDash","setLineJoin","setMiterLimit","setWidth","styleHost","styleCircleHost","styleTextHost","StyleIconComponent","Icon","setOpacity","StyleFillComponent","Fill","setFill","fill","DefaultControlComponent","defaults","forEach","addControl","removeControl","ControlComponent","Control","ControlAttributionComponent","Attribution","ControlFullScreenComponent","FullScreen","ControlMousePositionComponent","MousePosition","ControlOverviewMapComponent","OverviewMap","reloadInstance","ControlRotateComponent","Rotate","ControlScaleLineComponent","ScaleLine","ControlZoomComponent","Zoom","ControlZoomSliderComponent","ZoomSlider","ControlZoomToExtentComponent","ZoomToExtent","FormatMVTComponent","MVT","DefaultInteractionComponent","i","addInteraction","removeInteraction","FreeboardInteractionComponent","DragPan","DragZoom","PinchZoom","MouseWheelZoom","KeyboardPan","KeyboardZoom","DoubleClickZoomInteractionComponent","DoubleClickZoom","DragAndDropInteractionComponent","DragAndDrop","DragBoxInteractionComponent","DragBox","DragPanInteractionComponent","DragRotateInteractionComponent","DragRotate","DragRotateAndZoomInteractionComponent","DragRotateAndZoom","DragZoomInteractionComponent","MouseWheelZoomInteractionComponent","PinchZoomInteractionComponent","DrawInteractionComponent","Draw","onChange","onChangeActive","onDrawEnd","onDrawStart","SelectInteractionComponent","Select","onSelect","ModifyInteractionComponent","Modify","onModifyEnd","onModifyStart","TranslateInteractionComponent","Translate","onTranslateEnd","onTranslateStart","onTranslating","AttributionComponent","html","innerHTML","AttributionsComponent","attributions","length","cmp","setAttributions","ContentChildren","SourceUTFGridComponent","UTFGrid","COMPONENTS","AngularOpenlayersModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"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AAAA,6CAHZrF,EAAAA,mBACAA,EAAAA,SAUHkU,IARE,SAAAA,GAAoB5O,UAClBnC,GAAAC,KAAAtF,KAAMwH,IAAMxH,SCuIVsW,GAAa,CACjB1W,EAEA8C,EACAU,EAEA+B,EACAS,EACAE,EACAE,EACAE,EAEA+B,GACAE,GACAI,GACA6N,GACA9N,GACAb,EACA2B,GACAI,GACAT,GACAa,GACAE,GACAE,GACAK,GACAE,GACAxD,EACA2D,GACAc,GACAE,GACAE,GACAE,GACAE,GACAE,GACAf,GACAyB,GACAsB,GAEAW,GACAO,GACA4B,GACAH,GACAb,GACAV,GAEA8B,GACAK,GACAE,GACAE,GACAE,GACAE,GACAG,GACAE,GACAE,GACAE,GACAE,GAEAE,GACAnM,EACAkC,GAEAmK,GACAI,GACAO,GACAE,GACAE,GACAE,GACAC,GACAE,GACAE,GACAC,GACAC,GACAC,GACAM,GACAG,GACAI,GAEAhJ,GACAF,GACA0J,GACAH,IAGFY,yBAACC,EAAAA,SAAQ1U,KAAA,CAAC,CACR2U,aAAcH,GACdI,QAAS,CAACC,EAAAA,cACVC,QAASN,OAE2BC,IALtC,SAAAA","sourcesContent":["import {\n  Component,\n  OnInit,\n  ElementRef,\n  Input,\n  Output,\n  EventEmitter,\n  AfterViewInit,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport Map from 'ol/Map';\nimport MapBrowserEvent from 'ol/MapBrowserEvent';\nimport MapEvent from 'ol/MapEvent';\nimport ObjectEvent from 'ol/Object';\nimport RenderEvent from 'ol/render/Event';\nimport { Control } from 'ol/control';\nimport { Interaction } from 'ol/interaction';\n\n@Component({\n  selector: 'aol-map',\n  template: `\n    <div [style.width]=\"width\" [style.height]=\"height\" tabindex=\"-1\"></div>\n    <ng-content></ng-content>\n  `,\n})\nexport class MapComponent implements OnInit, AfterViewInit, OnChanges {\n  public instance: Map;\n  public componentType = 'map';\n\n  @Input()\n  width = '100%';\n  @Input()\n  height = '100%';\n  @Input()\n  pixelRatio: number;\n  @Input()\n  keyboardEventTarget: Element | string;\n  @Input()\n  loadTilesWhileAnimating: boolean;\n  @Input()\n  loadTilesWhileInteracting: boolean;\n  @Input()\n  logo: string | boolean;\n  @Input()\n  renderer: 'canvas' | 'webgl';\n\n  @Output()\n  onClick: EventEmitter<MapBrowserEvent>;\n  @Output()\n  onDblClick: EventEmitter<MapBrowserEvent>;\n  @Output()\n  onMoveEnd: EventEmitter<MapEvent>;\n  @Output()\n  onPointerDrag: EventEmitter<MapBrowserEvent>;\n  @Output()\n  onPointerMove: EventEmitter<MapBrowserEvent>;\n  @Output()\n  onPostCompose: EventEmitter<RenderEvent>;\n  @Output()\n  onPostRender: EventEmitter<MapEvent>;\n  @Output()\n  onPreCompose: EventEmitter<RenderEvent>;\n  @Output()\n  onPropertyChange: EventEmitter<ObjectEvent>;\n  @Output()\n  onSingleClick: EventEmitter<MapBrowserEvent>;\n\n  // we pass empty arrays to not get default controls/interactions because we have our own directives\n  controls: Control[] = [];\n  interactions: Interaction[] = [];\n\n  constructor(private host: ElementRef) {\n    this.onClick = new EventEmitter<MapBrowserEvent>();\n    this.onDblClick = new EventEmitter<MapBrowserEvent>();\n    this.onMoveEnd = new EventEmitter<MapEvent>();\n    this.onPointerDrag = new EventEmitter<MapBrowserEvent>();\n    this.onPointerMove = new EventEmitter<MapBrowserEvent>();\n    this.onPostCompose = new EventEmitter<RenderEvent>();\n    this.onPostRender = new EventEmitter<MapEvent>();\n    this.onPreCompose = new EventEmitter<RenderEvent>();\n    this.onPropertyChange = new EventEmitter<ObjectEvent>();\n    this.onSingleClick = new EventEmitter<MapBrowserEvent>();\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.Map instance with:', this);\n    this.instance = new Map(this);\n    this.instance.setTarget(this.host.nativeElement.firstElementChild);\n    this.instance.on('click', (event: MapBrowserEvent) => this.onClick.emit(event));\n    this.instance.on('dblclick', (event: MapBrowserEvent) => this.onDblClick.emit(event));\n    this.instance.on('moveend', (event: MapEvent) => this.onMoveEnd.emit(event));\n    this.instance.on('pointerdrag', (event: MapBrowserEvent) => this.onPointerDrag.emit(event));\n    this.instance.on('pointermove', (event: MapBrowserEvent) => this.onPointerMove.emit(event));\n    this.instance.on('postcompose', (event: RenderEvent) => this.onPostCompose.emit(event));\n    this.instance.on('postrender', (event: MapEvent) => this.onPostRender.emit(event));\n    this.instance.on('precompose', (event: RenderEvent) => this.onPreCompose.emit(event));\n    this.instance.on('propertychange', (event: ObjectEvent) => this.onPropertyChange.emit(event));\n    this.instance.on('singleclick', (event: MapBrowserEvent) => this.onSingleClick.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    // console.log('changes detected in aol-map, setting new properties: ', properties);\n    this.instance.setProperties(properties, false);\n  }\n\n  ngAfterViewInit() {\n    this.instance.updateSize();\n  }\n}\n","import { Component, Input, OnInit, OnChanges, OnDestroy, SimpleChanges, EventEmitter, Output } from '@angular/core';\nimport View from 'ol/View';\nimport { MapComponent } from './map.component';\nimport { ObjectEvent } from 'ol';\nimport { Extent } from 'ol/extent';\nimport { Coordinate } from 'ol/coordinate';\nimport { fromLonLat } from 'ol/proj';\n\n@Component({\n  selector: 'aol-view',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ViewComponent implements OnInit, OnChanges, OnDestroy {\n  public instance: View;\n  public componentType = 'view';\n\n  @Input()\n  constrainRotation: boolean | number;\n  @Input()\n  enableRotation: boolean;\n  @Input()\n  extent: Extent;\n  @Input()\n  maxResolution: number;\n  @Input()\n  minResolution: number;\n  @Input()\n  maxZoom: number;\n  @Input()\n  minZoom: number;\n  @Input()\n  resolution: number;\n  @Input()\n  resolutions: number[];\n  @Input()\n  rotation: number;\n  @Input()\n  zoom: number;\n  @Input()\n  zoomFactor: number;\n  @Input()\n  center: Coordinate;\n  @Input()\n  projection: string;\n  @Input()\n  zoomAnimation = false;\n\n  @Output()\n  onChangeZoom: EventEmitter<ObjectEvent> = new EventEmitter<ObjectEvent>();\n  @Output()\n  onChangeResolution: EventEmitter<ObjectEvent> = new EventEmitter<ObjectEvent>();\n  @Output()\n  onChangeCenter: EventEmitter<ObjectEvent> = new EventEmitter<ObjectEvent>();\n\n  constructor(private host: MapComponent) {}\n\n  ngOnInit() {\n    // console.log('creating ol.View instance with: ', this);\n    this.instance = new View(this);\n    this.host.instance.setView(this.instance);\n\n    this.instance.on('change:zoom', (event: ObjectEvent) => this.onChangeZoom.emit(event));\n    this.instance.on('change:resolution', (event: ObjectEvent) => this.onChangeResolution.emit(event));\n    this.instance.on('change:center', (event: ObjectEvent) => this.onChangeCenter.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    let args= {};\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        switch (key) {\n            case 'rotation':\n                if (this.zoomAnimation) {\n                    args[key]= changes[key].currentValue;\n                } else {\n                    properties[key] = changes[key].currentValue;\n                }            \n                break;                  \n            case 'zoom':\n                /** Work-around: setting the zoom via setProperties does not work. */\n                if (this.zoomAnimation) {\n                    args[key]= changes[key].currentValue;\n                } else {\n                    this.instance.setZoom(changes[key].currentValue);\n                }\n                break;\n            case 'projection':\n                this.instance = new View(this);\n                this.host.instance.setView(this.instance);\n                break;\n            default:\n                properties[key] = changes[key].currentValue;\n                break;\n        }\n        if( this.zoomAnimation && (\n            typeof args['zoom']!== 'undefined' || \n                typeof args['rotation']!== 'undefined') ) {\n            this.instance.animate(args);\n        }\n      }\n    }\n    //console.log('changes detected in aol-view, setting new properties: ', properties);\n    this.instance.setProperties(properties, false);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-view');\n  }\n}\n","import { Component, Input, AfterContentInit, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { Graticule } from 'ol';\nimport { Stroke } from 'ol/style';\nimport { MapComponent } from './map.component';\n\n@Component({\n  selector: 'aol-graticule',\n  template: '<ng-content></ng-content>',\n})\nexport class GraticuleComponent implements AfterContentInit, OnChanges, OnDestroy {\n  instance: any;\n  public componentType = 'graticule';\n\n  @Input()\n  strokeStyle: Stroke;\n  @Input()\n  showLabels: boolean;\n  @Input()\n  lonLabelPosition: number;\n  @Input()\n  latLabelPosition: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n\n    if (!this.instance) {\n      return;\n    }\n\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n      }\n    }\n\n    if (properties) {\n      this.instance = new Graticule(properties);\n    }\n    this.instance.setMap(this.map.instance);\n  }\n\n  ngAfterContentInit(): void {\n    this.instance = new Graticule({\n      strokeStyle: this.strokeStyle,\n      showLabels: this.showLabels,\n      lonLabelPosition: this.lonLabelPosition,\n      latLabelPosition: this.latLabelPosition,\n    });\n    this.instance.setMap(this.map.instance);\n  }\n\n  ngOnDestroy(): void {\n    this.instance.setMap(null);\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { OnDestroy, OnInit, OnChanges, Input, SimpleChanges } from '@angular/core';\nimport { Event } from 'ol/events';\nimport { MapComponent } from '../map.component';\nimport { LayerGroupComponent } from './layergroup.component';\nimport { Extent } from 'ol/extent';\n\nexport abstract class LayerComponent implements OnInit, OnChanges, OnDestroy {\n  public instance: any;\n  public componentType = 'layer';\n\n  @Input()\n  opacity: number;\n  @Input()\n  visible: boolean;\n  @Input()\n  extent: Extent;\n  @Input()\n  zIndex: number;\n  @Input()\n  minResolution: number;\n  @Input()\n  maxResolution: number;\n\n  @Input()\n  precompose: (evt: Event) => void;\n  @Input()\n  postcompose: (evt: Event) => void;\n\n  constructor(protected host: MapComponent | LayerGroupComponent) {}\n\n  ngOnInit() {\n    if (this.precompose !== null && this.precompose !== undefined) {\n      this.instance.on('precompose', this.precompose);\n    }\n    if (this.postcompose !== null && this.postcompose !== undefined) {\n      this.instance.on('postcompose', this.postcompose);\n    }\n    this.host.instance.getLayers().push(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.host.instance.getLayers().remove(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n        if (key === 'precompose') {\n          this.instance.un('precompose', changes[key].previousValue);\n          this.instance.on('precompose', changes[key].currentValue);\n        }\n        if (key === 'postcompose') {\n          this.instance.un('postcompose', changes[key].previousValue);\n          this.instance.on('postcompose', changes[key].currentValue);\n        }\n      }\n    }\n    // console.log('changes detected in aol-layer, setting new properties: ', properties);\n    this.instance.setProperties(properties, false);\n  }\n}\n","import { Component, OnDestroy, OnInit, SkipSelf, Optional } from '@angular/core';\nimport { Group } from 'ol/layer';\nimport { LayerComponent } from './layer.component';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-layer-group',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerGroupComponent extends LayerComponent implements OnInit, OnDestroy {\n  public instance: Group;\n\n  constructor(\n    map: MapComponent,\n    @SkipSelf()\n    @Optional()\n    group?: LayerGroupComponent\n  ) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log(`creating ol.layer.Group instance with:`, this);\n    this.instance = new Group(this);\n    super.ngOnInit();\n  }\n}\n","import { Component, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\nimport { Image } from 'ol/layer';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\nimport { Extent } from 'ol/extent';\n\n@Component({\n  selector: 'aol-layer-image',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerImageComponent extends LayerComponent implements OnInit, OnChanges {\n  public source: Image;\n\n  @Input()\n  opacity: number;\n  @Input()\n  visible: boolean;\n  @Input()\n  extent: Extent;\n  @Input()\n  minResolution: number;\n  @Input()\n  maxResolution: number;\n  @Input()\n  zIndex: number;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    this.instance = new Image(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\nimport { Tile } from 'ol/layer';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\n\n@Component({\n  selector: 'aol-layer-tile',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerTileComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\n  public source: Tile;\n\n  @Input()\n  preload: number;\n  @Input()\n  useInterimTilesOnError: boolean;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.layer.Tile instance with:', this);\n    this.instance = new Tile(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\nimport { MapComponent } from '../map.component';\nimport { Vector } from 'ol/layer';\nimport { Style } from 'ol/style';\nimport { StyleFunction } from 'ol/style/Style';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\n\n@Component({\n  selector: 'aol-layer-vector',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerVectorComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\n  public source: Vector;\n\n  @Input()\n  renderBuffer: number;\n\n  @Input()\n  style: Style | Style[] | StyleFunction;\n\n  @Input()\n  updateWhileAnimating: boolean;\n\n  @Input()\n  updateWhileInteracting: boolean;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.layer.Vector instance with:', this);\n    this.instance = new Vector(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Component, OnInit, Input, Optional, SimpleChanges, OnChanges } from '@angular/core';\nimport { VectorTile } from 'ol/layer';\nimport { RenderType } from 'ol/layer/VectorTile';\nimport { Feature } from 'ol';\nimport { Style } from 'ol/style';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\nimport { StyleFunction } from 'ol/style/Style';\n\n@Component({\n  selector: 'aol-layer-vectortile',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerVectorTileComponent extends LayerComponent implements OnInit, OnChanges {\n  @Input()\n  renderBuffer: number;\n  @Input()\n  renderMode: RenderType | string;\n  /* not marked as optional in the typings */\n  @Input()\n  renderOrder: (feature1: Feature, feature2: Feature) => number;\n  @Input()\n  style: Style | Style[] | StyleFunction;\n  @Input()\n  updateWhileAnimating: boolean;\n  @Input()\n  updateWhileInteracting: boolean;\n  @Input()\n  visible: boolean;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.layer.VectorTile instance with:', this);\n    this.instance = new VectorTile(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Input, OnDestroy } from '@angular/core';\nimport { Source } from 'ol';\nimport { LayerComponent } from '../layers/layer.component';\nimport { SourceRasterComponent } from './raster.component';\n\nexport class SourceComponent implements OnDestroy {\n  public instance: Source;\n  public componentType = 'source';\n\n  @Input()\n  attributions: any;\n\n  constructor(protected host: LayerComponent, protected raster?: SourceRasterComponent) {}\n\n  ngOnDestroy() {\n    if (this.host && this.host.instance) {\n      this.host.instance.setSource(null);\n    }\n\n    if (this.raster) {\n      this.raster.sources = [];\n    }\n  }\n\n  protected _register(s: Source) {\n    if (this.host) {\n      this.host.instance.setSource(s);\n    }\n\n    if (this.raster) {\n      this.raster.sources = [s];\n      this.raster.init();\n    }\n  }\n}\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { createXYZ } from 'ol/tilegrid';\nimport TileGrid from 'ol/tilegrid/TileGrid';\nimport { Extent } from 'ol/extent';\nimport { Coordinate } from 'ol/coordinate';\nimport { Size } from 'ol/size';\n\n@Component({\n  selector: 'aol-tilegrid',\n  template: '',\n})\nexport class TileGridComponent implements OnInit, OnChanges {\n  instance: TileGrid;\n\n  @Input()\n  extent: Extent;\n  @Input()\n  maxZoom: number;\n  @Input()\n  minZoom: number;\n  @Input()\n  tileSize: number | Size;\n  @Input()\n  origin?: Coordinate;\n  @Input()\n  resolutions: number[];\n\n  ngOnInit() {\n    if (!this.resolutions) {\n      this.instance = createXYZ(this);\n    } else {\n      this.instance = new TileGrid(this);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.resolutions) {\n      this.instance = createXYZ(this);\n    } else {\n      this.instance = new TileGrid(this);\n    }\n  }\n}\n","import { AfterContentInit, Component, EventEmitter, forwardRef, Host, Input, Output } from '@angular/core';\nimport { Raster, Source } from 'ol/source';\nimport { RasterOperationType, RasterSourceEvent } from 'ol/source/Raster';\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { SourceComponent } from './source.component';\nimport { Operation } from 'ol/source/Raster';\n\n@Component({\n  selector: 'aol-source-raster',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [\n    {\n      provide: SourceComponent,\n      useExisting: forwardRef(() => SourceRasterComponent),\n    },\n  ],\n})\nexport class SourceRasterComponent extends SourceComponent implements AfterContentInit {\n  instance: Raster;\n\n  @Input()\n  operation?: Operation;\n  @Input()\n  threads?: number;\n  @Input()\n  lib?: Object;\n  @Input()\n  operationType?: RasterOperationType;\n\n  @Output()\n  beforeOperations: EventEmitter<RasterSourceEvent> = new EventEmitter<RasterSourceEvent>();\n  @Output()\n  afterOperations: EventEmitter<RasterSourceEvent> = new EventEmitter<RasterSourceEvent>();\n\n  sources: Source[] = [];\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngAfterContentInit() {\n    this.init();\n  }\n\n  init() {\n    this.instance = new Raster(this);\n    this.instance.on('beforeoperations', (event: RasterSourceEvent) => this.beforeOperations.emit(event));\n    this.instance.on('afteroperations', (event: RasterSourceEvent) => this.afterOperations.emit(event));\n    this._register(this.instance);\n  }\n}\n","import {\n  Component,\n  Host,\n  Input,\n  AfterContentInit,\n  forwardRef,\n  OnChanges,\n  ContentChild,\n  SimpleChanges,\n  Optional,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { XYZ } from 'ol/source';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { TileGridComponent } from '../tilegrid.component';\nimport { SourceRasterComponent } from './raster.component';\nimport { Size } from 'ol/size';\nimport { TileSourceEvent } from 'ol/source/Tile';\nimport TileGrid from 'ol/tilegrid/TileGrid';\nimport { LoadFunction, UrlFunction } from 'ol/Tile';\n\n@Component({\n  selector: 'aol-source-xyz',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceXYZComponent) }],\n})\nexport class SourceXYZComponent extends SourceComponent implements AfterContentInit, OnChanges {\n  instance: XYZ;\n  @Input()\n  cacheSize: number;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  opaque: boolean;\n  @Input()\n  projection: string;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  minZoom: number;\n  @Input()\n  maxZoom: number;\n  @Input()\n  tileGrid: TileGrid;\n  @Input()\n  tileLoadFunction?: LoadFunction;\n  @Input()\n  tilePixelRatio: number;\n  @Input()\n  tileSize: number | Size;\n  @Input()\n  tileUrlFunction?: UrlFunction;\n  @Input()\n  url: string;\n  @Input()\n  urls: string[];\n  @Input()\n  wrapX: boolean;\n\n  @ContentChild(TileGridComponent)\n  tileGridXYZ: TileGridComponent;\n\n  @Output()\n  tileLoadStart: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n  @Output()\n  tileLoadEnd: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n  @Output()\n  tileLoadError: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n\n  constructor(\n    @Optional()\n    @Host()\n    layer: LayerTileComponent,\n    @Optional()\n    @Host()\n    raster?: SourceRasterComponent\n  ) {\n    super(layer, raster);\n  }\n\n  ngAfterContentInit() {\n    if (this.tileGridXYZ) {\n      this.tileGrid = this.tileGridXYZ.instance;\n    }\n    this.init();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n      }\n    }\n\n    this.instance.setProperties(properties, false);\n    if (changes.hasOwnProperty('url')) {\n      this.init();\n    }\n  }\n\n  init() {\n    this.instance = new XYZ(this);\n\n    this.instance.on('tileloadstart', (event: TileSourceEvent) => this.tileLoadStart.emit(event));\n    this.instance.on('tileloadend', (event: TileSourceEvent) => this.tileLoadEnd.emit(event));\n    this.instance.on('tileloaderror', (event: TileSourceEvent) => this.tileLoadError.emit(event));\n\n    this._register(this.instance);\n  }\n}\n","import { Component, Host, forwardRef, Input, AfterContentInit, Optional, Output, EventEmitter } from '@angular/core';\nimport { OSM } from 'ol/source';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { SourceXYZComponent } from './xyz.component';\nimport { SourceRasterComponent } from './raster.component';\nimport { LoadFunction } from 'ol/Tile';\nimport { AttributionLike } from 'ol/source/Source';\nimport { TileSourceEvent } from 'ol/source/Tile';\n\n@Component({\n  selector: 'aol-source-osm',\n  template: `\n    <div class=\"aol-source-osm\"></div>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceOsmComponent) }],\n})\nexport class SourceOsmComponent extends SourceXYZComponent implements AfterContentInit {\n  instance: OSM;\n\n  @Input()\n  attributions: AttributionLike;\n  @Input()\n  cacheSize: number;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  maxZoom: number;\n  @Input()\n  opaque: boolean;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  tileLoadFunction: LoadFunction;\n  @Input()\n  url: string;\n  @Input()\n  wrapX: boolean;\n\n  @Output()\n  tileLoadStart: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n  @Output()\n  tileLoadEnd: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n  @Output()\n  tileLoadError: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n\n  constructor(\n    @Host()\n    @Optional()\n    layer: LayerTileComponent,\n    @Host()\n    @Optional()\n    raster?: SourceRasterComponent\n  ) {\n    super(layer, raster);\n  }\n\n  ngAfterContentInit() {\n    if (this.tileGridXYZ) {\n      this.tileGrid = this.tileGridXYZ.instance;\n    }\n\n    this.instance = new OSM(this);\n\n    this.instance.on('tileloadstart', (event: TileSourceEvent) => this.tileLoadStart.emit(event));\n    this.instance.on('tileloadend', (event: TileSourceEvent) => this.tileLoadEnd.emit(event));\n    this.instance.on('tileloaderror', (event: TileSourceEvent) => this.tileLoadError.emit(event));\n    this._register(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { BingMaps } from 'ol/source';\nimport { SourceComponent } from './source.component';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { LoadFunction } from 'ol/Tile';\n\n@Component({\n  selector: 'aol-source-bingmaps',\n  template: `\n    <div class=\"aol-source-bingmaps\"></div>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceBingmapsComponent) }],\n})\nexport class SourceBingmapsComponent extends SourceComponent implements OnInit {\n  instance: BingMaps;\n\n  @Input()\n  cacheSize: number;\n  @Input()\n  hidpi: boolean;\n  @Input()\n  culture: string;\n  @Input()\n  key: string;\n  @Input()\n  imagerySet: 'Road' | 'Aerial' | 'AerialWithLabels' | 'collinsBart' | 'ordnanceSurvey' = 'Aerial';\n  @Input()\n  maxZoom: number;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  tileLoadFunction: LoadFunction;\n  @Input()\n  wrapX: boolean;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new BingMaps(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { Vector } from 'ol/source';\nimport Feature from 'ol/format/Feature';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { SourceComponent } from './source.component';\nimport { LoadingStrategy } from 'ol/source/Vector';\n\n@Component({\n  selector: 'aol-source-vector',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceVectorComponent) }],\n})\nexport class SourceVectorComponent extends SourceComponent implements OnInit {\n  instance: Vector;\n  @Input()\n  overlaps: boolean;\n  @Input()\n  useSpatialIndex: boolean;\n  @Input()\n  wrapX: boolean;\n  @Input()\n  url: string;\n  @Input()\n  format: Feature;\n  @Input()\n  strategy: LoadingStrategy;\n\n  constructor(@Host() layer: LayerVectorComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new Vector(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import {\n  Component,\n  Host,\n  Input,\n  forwardRef,\n  ContentChild,\n  AfterContentInit,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport { Feature } from 'ol';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { SourceComponent } from './source.component';\nimport { SourceVectorComponent } from './vector.component';\nimport { Cluster, Vector } from 'ol/source';\nimport { Point } from 'ol/geom';\n\n@Component({\n  selector: 'aol-source-cluster',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceClusterComponent) }],\n})\nexport class SourceClusterComponent extends SourceComponent implements AfterContentInit, OnChanges {\n  instance: Cluster;\n\n  @Input()\n  distance: number;\n  @Input()\n  geometryFunction?: (feature: Feature) => Point;\n  @Input()\n  wrapX?: boolean;\n\n  @ContentChild(SourceVectorComponent)\n  sourceVectorComponent: SourceVectorComponent;\n  source: Vector;\n\n  constructor(@Host() layer: LayerVectorComponent) {\n    super(layer);\n  }\n\n  ngAfterContentInit() {\n    this.source = this.sourceVectorComponent.instance;\n\n    this.instance = new Cluster(this);\n    this.host.instance.setSource(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance && changes.hasOwnProperty('distance')) {\n      this.instance.setDistance(this.distance);\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport WMTS from 'ol/tilegrid/WMTS';\nimport { TileGridComponent } from './tilegrid.component';\nimport { Coordinate } from 'ol/coordinate';\nimport { Size } from 'ol/size';\n\n@Component({\n  selector: 'aol-tilegrid-wmts',\n  template: '',\n})\nexport class TileGridWMTSComponent extends TileGridComponent implements OnInit {\n  instance: WMTS;\n\n  @Input()\n  origin?: Coordinate;\n  @Input()\n  origins?: Coordinate[];\n  @Input()\n  resolutions: number[];\n  @Input()\n  matrixIds: string[];\n  @Input()\n  sizes?: Size[];\n  @Input()\n  tileSizes?: (number | Size)[];\n  @Input()\n  widths?: number[];\n\n  ngOnInit() {\n    this.instance = new WMTS(this);\n  }\n}\n","import {\n  Component,\n  Host,\n  Input,\n  forwardRef,\n  AfterContentInit,\n  ContentChild,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { TileGridWMTSComponent } from '../tilegridwmts.component';\nimport { WMTS } from 'ol/source';\nimport { WMTS as TileGridWMTS } from 'ol/tilegrid';\nimport { WMTSRequestEncoding } from 'ol/source';\nimport { ProjectionLike } from 'ol/proj';\nimport { LoadFunction } from 'ol/Tile';\n\n@Component({\n  selector: 'aol-source-tilewmts',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMTSComponent) }],\n})\nexport class SourceTileWMTSComponent extends SourceComponent implements AfterContentInit, OnChanges {\n  instance: WMTS;\n  @Input()\n  cacheSize?: number;\n  @Input()\n  crossOrigin?: string;\n  @Input()\n  tileGrid: TileGridWMTS;\n  @Input()\n  projection: ProjectionLike;\n  @Input()\n  reprojectionErrorThreshold?: number;\n  @Input()\n  requestEncoding?: WMTSRequestEncoding | string;\n  @Input()\n  layer: string;\n  @Input()\n  style: string;\n  @Input()\n  tileClass?: any;\n  @Input()\n  tilePixelRatio?: number;\n  @Input()\n  version?: string;\n  @Input()\n  format?: string;\n  @Input()\n  matrixSet: string;\n  @Input()\n  dimensions?: Object;\n  @Input()\n  url?: string;\n  @Input()\n  tileLoadFunction?: LoadFunction;\n  @Input()\n  urls?: string[];\n  @Input()\n  wrapX?: boolean;\n\n  @ContentChild(TileGridWMTSComponent)\n  tileGridWMTS: TileGridWMTSComponent;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        switch (key) {\n          case 'url':\n            this.url = changes[key].currentValue;\n            this.setLayerSource();\n            break;\n          default:\n            break;\n        }\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    this.instance.setProperties(properties, false);\n  }\n\n  setLayerSource(): void {\n    this.instance = new WMTS(this);\n    this.host.instance.setSource(this.instance);\n  }\n\n  ngAfterContentInit(): void {\n    if (this.tileGridWMTS) {\n      this.tileGrid = this.tileGridWMTS.instance;\n      this.setLayerSource();\n    }\n  }\n}\n","import Feature from 'ol/format/Feature';\n\nexport class FormatComponent {\n  public instance: Feature;\n  public componentType = 'format';\n}\n","import { Component, Host, Input, forwardRef, ContentChild, AfterContentInit } from '@angular/core';\nimport { VectorTile } from 'ol/source';\nimport Feature from 'ol/format/Feature';\nimport TileGrid from 'ol/tilegrid/TileGrid';\nimport { LayerVectorTileComponent } from '../layers/layervectortile.component';\nimport { FormatComponent } from '../formats/format.component';\nimport { TileGridComponent } from '../tilegrid.component';\nimport { SourceComponent } from './source.component';\nimport { ProjectionLike } from 'ol/proj';\nimport { UrlFunction } from 'ol/Tile';\n\n@Component({\n  selector: 'aol-source-vectortile',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceVectorTileComponent) }],\n})\nexport class SourceVectorTileComponent extends SourceComponent implements AfterContentInit {\n  public instance: VectorTile;\n  @Input()\n  cacheSize: number;\n  @Input()\n  overlaps: boolean;\n  @Input()\n  projection: ProjectionLike;\n  @Input()\n  tilePixelRatio: number;\n  @Input()\n  tileUrlFunction: UrlFunction;\n  @Input()\n  url: string;\n  @Input()\n  urls: string[];\n  @Input()\n  wrapX: boolean;\n\n  @ContentChild(FormatComponent)\n  formatComponent: FormatComponent;\n  format: Feature;\n  @ContentChild(TileGridComponent)\n  tileGridComponent: TileGridComponent;\n  tileGrid: TileGrid;\n\n  constructor(@Host() layer: LayerVectorTileComponent) {\n    super(layer);\n  }\n\n  /* need the children to construct the OL3 object */\n  ngAfterContentInit() {\n    this.format = this.formatComponent.instance;\n    this.tileGrid = this.tileGridComponent.instance;\n    // console.log('creating ol.source.VectorTile instance with:', this);\n    this.instance = new VectorTile(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnChanges, OnInit, forwardRef, SimpleChanges } from '@angular/core';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { TileWMS } from 'ol/source';\nimport { TileGrid } from 'ol/tilegrid';\nimport { LoadFunction } from 'ol/Tile';\n\n@Component({\n  selector: 'aol-source-tilewms',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMSComponent) }],\n})\nexport class SourceTileWMSComponent extends SourceComponent implements OnChanges, OnInit {\n  instance: TileWMS;\n  @Input()\n  cacheSize: number;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  gutter: number;\n  @Input()\n  hidpi: boolean;\n  @Input()\n  params: Object;\n  @Input()\n  projection: string;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  serverType: string;\n  @Input()\n  tileGrid: TileGrid;\n  @Input()\n  tileLoadFunction: LoadFunction;\n  @Input()\n  url: string;\n  @Input()\n  urls: string[];\n  @Input()\n  wrapX: boolean;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new TileWMS(this);\n    this.host.instance.setSource(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance && changes.hasOwnProperty('params')) {\n      this.instance.updateParams(this.params);\n    }\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { TileJSON } from 'ol/source';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-tilejson',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileJSONComponent) }],\n})\nexport class SourceTileJSONComponent extends SourceComponent implements OnInit {\n  instance: TileJSON;\n\n  @Input()\n  url: string;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new TileJSON(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { SourceComponent } from './source.component';\nimport { Feature } from 'ol';\nimport { Vector } from 'ol/source';\nimport { GeoJSON } from 'ol/format';\nimport { ProjectionLike } from 'ol/proj';\n\n@Component({\n  selector: 'aol-source-geojson',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceGeoJSONComponent) }],\n})\nexport class SourceGeoJSONComponent extends SourceComponent implements OnInit {\n  instance: Vector;\n  format: Feature;\n  @Input()\n  defaultDataProjection: ProjectionLike;\n  @Input()\n  featureProjection: ProjectionLike;\n  @Input()\n  geometryName: string;\n  @Input()\n  url: string;\n\n  constructor(@Host() layer: LayerVectorComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.format = new GeoJSON(this);\n    this.instance = new Vector(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import {\n  Component,\n  Host,\n  Input,\n  forwardRef,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  OnInit,\n} from '@angular/core';\nimport { ImageStatic } from 'ol/source';\nimport { SourceComponent } from './source.component';\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { ProjectionLike } from 'ol/proj';\nimport { Extent } from 'ol/extent';\nimport { AttributionLike } from 'ol/source/Source';\nimport { LoadFunction } from 'ol/Image';\nimport { Size } from 'ol/size';\nimport { ImageSourceEvent } from 'ol/source/Image';\n\n@Component({\n  selector: 'aol-source-imagestatic',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageStaticComponent) }],\n})\nexport class SourceImageStaticComponent extends SourceComponent implements OnInit, OnChanges {\n  instance: ImageStatic;\n\n  @Input()\n  projection: ProjectionLike | string;\n  @Input()\n  imageExtent: Extent;\n  @Input()\n  url: string;\n  @Input()\n  attributions: AttributionLike;\n  @Input()\n  crossOrigin?: string;\n  @Input()\n  imageLoadFunction?: LoadFunction;\n  @Input()\n  imageSize?: Size;\n\n  @Output()\n  onImageLoadStart = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  onImageLoadEnd = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  onImageLoadError = new EventEmitter<ImageSourceEvent>();\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  setLayerSource(): void {\n    this.instance = new ImageStatic(this);\n    this.host.instance.setSource(this.instance);\n    this.instance.on('imageloadstart', (event: ImageSourceEvent) => this.onImageLoadStart.emit(event));\n    this.instance.on('imageloadend', (event: ImageSourceEvent) => this.onImageLoadEnd.emit(event));\n    this.instance.on('imageloaderror', (event: ImageSourceEvent) => this.onImageLoadError.emit(event));\n  }\n\n  ngOnInit() {\n    this.setLayerSource();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        switch (key) {\n          case 'url':\n            this.url = changes[key].currentValue;\n            this.setLayerSource();\n            break;\n          default:\n            break;\n        }\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    this.instance.setProperties(properties, false);\n  }\n}\n","import {\n  Component,\n  Host,\n  Input,\n  OnChanges,\n  OnInit,\n  forwardRef,\n  SimpleChanges,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { ImageWMS } from 'ol/source';\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { SourceComponent } from './source.component';\nimport { ProjectionLike } from 'ol/proj';\nimport { AttributionLike } from 'ol/source/Source';\nimport { LoadFunction } from 'ol/Image';\nimport { ImageSourceEvent } from 'ol/source/Image';\n\n@Component({\n  selector: 'aol-source-imagewms',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageWMSComponent) }],\n})\nexport class SourceImageWMSComponent extends SourceComponent implements OnChanges, OnInit {\n  instance: ImageWMS;\n\n  @Input()\n  attributions: AttributionLike;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  hidpi: boolean;\n  @Input()\n  serverType: string;\n  @Input()\n  imageLoadFunction?: LoadFunction;\n  @Input()\n  params: Object;\n  @Input()\n  projection: ProjectionLike | string;\n  @Input()\n  ratio: number;\n  @Input()\n  resolutions: Array<number>;\n  @Input()\n  url: string;\n\n  @Output()\n  onImageLoadStart = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  onImageLoadEnd = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  onImageLoadError = new EventEmitter<ImageSourceEvent>();\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new ImageWMS(this);\n    this.host.instance.setSource(this.instance);\n    this.instance.on('imageloadstart', (event: ImageSourceEvent) => this.onImageLoadStart.emit(event));\n    this.instance.on('imageloadend', (event: ImageSourceEvent) => this.onImageLoadEnd.emit(event));\n    this.instance.on('imageloaderror', (event: ImageSourceEvent) => this.onImageLoadError.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance && changes.hasOwnProperty('params')) {\n      this.instance.updateParams(this.params);\n    }\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  forwardRef,\n  Host,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { ImageArcGISRest } from 'ol/source';\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { SourceComponent } from './source.component';\nimport { ProjectionLike } from 'ol/proj';\nimport { AttributionLike } from 'ol/source/Source';\nimport { LoadFunction } from 'ol/Image';\nimport { ImageSourceEvent } from 'ol/source/Image';\n\n@Component({\n  selector: 'aol-source-imagearcgisrest',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageArcGISRestComponent) }],\n})\nexport class SourceImageArcGISRestComponent extends SourceComponent implements OnInit, OnChanges {\n  instance: ImageArcGISRest;\n\n  @Input() projection: ProjectionLike | string;\n  @Input() url: string;\n  @Input() attributions: AttributionLike[];\n  @Input() crossOrigin?: string;\n  @Input() imageLoadFunction?: LoadFunction;\n  @Input() params?: { [k: string]: any };\n  @Input() ratio = 1.5;\n  @Input() resolutions?: number[];\n  @Input() wrapX?: boolean;\n\n  @Output()\n  onImageLoadStart = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  onImageLoadEnd = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  onImageLoadError = new EventEmitter<ImageSourceEvent>();\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new ImageArcGISRest(this);\n    this.host.instance.setSource(this.instance);\n    this.instance.on('imageloadstart', (event: ImageSourceEvent) => this.onImageLoadStart.emit(event));\n    this.instance.on('imageloadend', (event: ImageSourceEvent) => this.onImageLoadEnd.emit(event));\n    this.instance.on('imageloaderror', (event: ImageSourceEvent) => this.onImageLoadError.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance && changes.hasOwnProperty('params')) {\n      this.instance.updateParams(this.params);\n    }\n  }\n}\n","import { Component, OnInit, OnDestroy, OnChanges, Input, SimpleChanges } from '@angular/core';\nimport { Feature } from 'ol';\nimport { SourceVectorComponent } from './sources/vector.component';\n\n@Component({\n  selector: 'aol-feature',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class FeatureComponent implements OnInit, OnDestroy, OnChanges {\n  public componentType = 'feature';\n  public instance: Feature;\n\n  @Input()\n  id: string | number | undefined;\n\n  constructor(private host: SourceVectorComponent) {}\n\n  ngOnInit() {\n    this.instance = new Feature();\n    if (this.id !== undefined) {\n      this.instance.setId(this.id);\n    }\n    this.host.instance.addFeature(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.host.instance.removeFeature(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance) {\n      this.instance.setId(this.id);\n    }\n  }\n}\n","import { Input, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { MapComponent } from '../map.component';\nimport SimpleGeometry from 'ol/geom/SimpleGeometry';\n\nexport abstract class SimpleGeometryComponent implements OnInit {\n  public instance: SimpleGeometry;\n  public componentType = 'simple-geometry';\n\n  @Input() srid: string;\n\n  constructor(protected map: MapComponent, protected host: FeatureComponent) {}\n\n  ngOnInit() {\n    this.host.instance.setGeometry(this.instance);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { Circle } from 'ol/geom';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-geometry-circle',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryCircleComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-circle';\n  public instance: Circle;\n\n  @Input()\n  get radius(): number {\n    return this.instance.getRadius();\n  }\n  set radius(radius: number) {\n    this.instance.setRadius(radius);\n  }\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n    // defaulting coordinates to [0,0]. To be overridden in child component.\n    this.instance = new Circle([0, 0]);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { LineString } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-linestring',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryLinestringComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-linestring';\n  public instance: LineString;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new LineString([[0, 0], [1, 1]]);\n    super.ngOnInit();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { MultiLineString } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-multilinestring',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryMultiLinestringComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-multilinestring';\n  public instance: MultiLineString;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new MultiLineString([[[0, 0], [1, 1]]]);\n    super.ngOnInit();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { MultiPoint } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-multipoint',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryMultiPointComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-multipoint';\n  public instance: MultiPoint;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new MultiPoint([[0, 0], [1, 1]]);\n    super.ngOnInit();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { MultiPolygon } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-multipolygon',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryMultiPolygonComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-multipolygon';\n  public instance: MultiPolygon;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new MultiPolygon([[[[0, 0], [1, 1], [0, 1]]]]);\n    super.ngOnInit();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { Point } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-point',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryPointComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-point';\n  public instance: Point;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new Point([0, 0]);\n    super.ngOnInit();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { Polygon } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-polygon',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryPolygonComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-polygon';\n  public instance: Polygon;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new Polygon([[[0, 0], [1, 1], [0, 1]]]);\n    super.ngOnInit();\n  }\n}\n","import { Component, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'aol-content',\n  template: '<ng-content></ng-content>',\n})\nexport class ContentComponent {\n  constructor(public elementRef: ElementRef) {}\n}\n","import { Component, ContentChild, Input, OnDestroy, OnInit } from '@angular/core';\nimport { MapComponent } from './map.component';\nimport { Overlay, PanOptions } from 'ol';\nimport { ContentComponent } from './content.component';\nimport OverlayPositioning from 'ol/OverlayPositioning';\n\n@Component({\n  selector: 'aol-overlay',\n  template: '<ng-content></ng-content>',\n})\nexport class OverlayComponent implements OnInit, OnDestroy {\n  componentType = 'overlay';\n  instance: Overlay;\n  element: Element;\n  @ContentChild(ContentComponent)\n  content: ContentComponent;\n\n  @Input()\n  id: number | string;\n  @Input()\n  offset: number[];\n  @Input()\n  positioning: OverlayPositioning | string;\n  @Input()\n  stopEvent: boolean;\n  @Input()\n  insertFirst: boolean;\n  @Input()\n  autoPan: boolean;\n  @Input()\n  autoPanAnimation: PanOptions;\n  @Input()\n  autoPanMargin: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    if (this.content) {\n      this.element = this.content.elementRef.nativeElement;\n      this.instance = new Overlay(this);\n      this.map.instance.addOverlay(this.instance);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.instance) {\n      this.map.instance.removeOverlay(this.instance);\n    }\n  }\n}\n","import { Component, Optional, OnChanges, Input, SimpleChanges, OnInit } from '@angular/core';\nimport { transform } from 'ol/proj';\nimport { MapComponent } from './map.component';\nimport { GeometryPointComponent } from './geom/geometrypoint.component';\nimport { GeometryCircleComponent } from './geom/geometrycircle.component';\nimport { ViewComponent } from './view.component';\nimport { OverlayComponent } from './overlay.component';\n\n@Component({\n  selector: 'aol-coordinate',\n  template: `\n    <div class=\"aol-coordinate\"></div>\n  `,\n})\nexport class CoordinateComponent implements OnChanges, OnInit {\n  private host: any;\n  private mapSrid = 'EPSG:3857';\n\n  @Input()\n  x: number;\n  @Input()\n  y: number;\n  @Input()\n  srid = 'EPSG:3857';\n\n  constructor(\n    private map: MapComponent,\n    @Optional() viewHost: ViewComponent,\n    @Optional() geometryPointHost: GeometryPointComponent,\n    @Optional() geometryCircleHost: GeometryCircleComponent,\n    @Optional() overlayHost: OverlayComponent\n  ) {\n    // console.log('instancing aol-coordinate');\n    if (geometryPointHost !== null) {\n      this.host = geometryPointHost;\n    } else if (geometryCircleHost !== null) {\n      this.host = geometryCircleHost;\n    } else if (viewHost !== null) {\n      this.host = viewHost;\n    } else if (overlayHost !== null) {\n      this.host = overlayHost;\n    }\n  }\n\n  ngOnInit() {\n    this.map.instance.on('change:view', e => this.onMapViewChanged(e));\n    this.mapSrid = this.map.instance\n      .getView()\n      .getProjection()\n      .getCode();\n    this.transformCoordinates();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.transformCoordinates();\n  }\n\n  private onMapViewChanged(event) {\n    this.mapSrid = event.target\n      .get(event.key)\n      .getProjection()\n      .getCode();\n    this.transformCoordinates();\n  }\n\n  private transformCoordinates() {\n    let transformedCoordinates: number[];\n\n    if (this.srid === this.mapSrid) {\n      transformedCoordinates = [this.x, this.y];\n    } else {\n      transformedCoordinates = transform([this.x, this.y], this.srid, this.mapSrid);\n    }\n\n    switch (this.host.componentType) {\n      case 'geometry-point':\n        this.host.instance.setCoordinates(transformedCoordinates);\n        break;\n      case 'geometry-circle':\n      case 'view':\n        this.host.instance.setCenter(transformedCoordinates);\n        break;\n      case 'overlay':\n        this.host.instance.setPosition(transformedCoordinates);\n        break;\n    }\n  }\n}\n","import { Component, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\nimport { MapComponent } from './map.component';\nimport { GeometryLinestringComponent } from './geom/geometrylinestring.component';\nimport { GeometryPolygonComponent } from './geom/geometrypolygon.component';\nimport { GeometryMultiPointComponent } from './geom/geometrymultipoint.component';\nimport { GeometryMultiLinestringComponent } from './geom/geometrymultilinestring.component';\nimport { GeometryMultiPolygonComponent } from './geom/geometrymultipolygon.component';\nimport { Coordinate } from 'ol/coordinate';\nimport { transform } from 'ol/proj';\n\n@Component({\n  selector: 'aol-collection-coordinates',\n  template: `\n    <div class=\"aol-collection-coordinates\"></div>\n  `,\n})\nexport class CollectionCoordinatesComponent implements OnChanges, OnInit {\n  private host: any;\n  private mapSrid = 'EPSG:3857';\n\n  @Input()\n  coordinates: Coordinate[] | Coordinate[][] | Coordinate[][][];\n  @Input()\n  srid = 'EPSG:3857';\n\n  constructor(\n    private map: MapComponent,\n    @Optional() geometryLinestring: GeometryLinestringComponent,\n    @Optional() geometryPolygon: GeometryPolygonComponent,\n    @Optional() geometryMultipoint: GeometryMultiPointComponent,\n    @Optional() geometryMultilinestring: GeometryMultiLinestringComponent,\n    @Optional() geometryMultipolygon: GeometryMultiPolygonComponent\n  ) {\n    if (!!geometryLinestring) {\n      this.host = geometryLinestring;\n    } else if (!!geometryPolygon) {\n      this.host = geometryPolygon;\n    } else if (!!geometryMultipoint) {\n      this.host = geometryMultipoint;\n    } else if (!!geometryMultilinestring) {\n      this.host = geometryMultilinestring;\n    } else if (!!geometryMultipolygon) {\n      this.host = geometryMultipolygon;\n    } else {\n      throw new Error('aol-collection-coordinates must be a child of a geometry component');\n    }\n  }\n\n  ngOnInit() {\n    this.map.instance.on('change:view', e => this.onMapViewChanged(e));\n    this.mapSrid = this.map.instance\n      .getView()\n      .getProjection()\n      .getCode();\n    this.transformCoordinates();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.transformCoordinates();\n  }\n\n  private onMapViewChanged(event) {\n    this.mapSrid = event.target\n      .get(event.key)\n      .getProjection()\n      .getCode();\n    this.transformCoordinates();\n  }\n\n  private transformCoordinates() {\n    let transformedCoordinates: Coordinate[] | Coordinate[][] | Coordinate[][][];\n\n    if (this.srid === this.mapSrid) {\n      transformedCoordinates = this.coordinates;\n    } else {\n      switch (this.host.componentType) {\n        case 'geometry-linestring':\n        case 'geometry-multipoint':\n          transformedCoordinates = (<Coordinate[]>this.coordinates).map(c => transform(c, this.srid, this.mapSrid));\n          break;\n        case 'geometry-polygon':\n        case 'geometry-multilinestring':\n          transformedCoordinates = (<Coordinate[][]>this.coordinates).map(cc =>\n            cc.map(c => transform(c, this.srid, this.mapSrid))\n          );\n          break;\n        case 'geometry-multipolygon':\n          transformedCoordinates = (<Coordinate[][][]>this.coordinates).map(ccc =>\n            ccc.map(cc => cc.map(c => transform(c, this.srid, this.mapSrid)))\n          );\n          break;\n      }\n    }\n\n    this.host.instance.setCoordinates(transformedCoordinates);\n  }\n}\n","import { Component, Input, Optional, OnInit } from '@angular/core';\nimport { Fill, Image, Stroke, Style, Text } from 'ol/style';\nimport { Geometry } from 'ol/geom';\nimport { FeatureComponent } from '../feature.component';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { GeometryFunction } from 'ol/style/Style';\n\n@Component({\n  selector: 'aol-style',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class StyleComponent implements OnInit {\n  private host: FeatureComponent | LayerVectorComponent;\n  public instance: Style;\n  public componentType = 'style';\n\n  @Input()\n  geometry: string | Geometry | GeometryFunction;\n  @Input()\n  fill: Fill;\n  @Input()\n  image: Image;\n  @Input()\n  stroke: Stroke;\n  @Input()\n  text: Text;\n  @Input()\n  zIndex: number;\n\n  constructor(@Optional() featureHost: FeatureComponent, @Optional() layerHost: LayerVectorComponent) {\n    // console.log('creating aol-style');\n    this.host = !!featureHost ? featureHost : layerHost;\n    if (!this.host) {\n      throw new Error('aol-style must be applied to a feature or a layer');\n    }\n  }\n\n  update() {\n    // console.log('updating style\\'s host: ', this.host);\n    this.host.instance.changed();\n  }\n\n  ngOnInit() {\n    // console.log('creating aol-style instance with: ', this);\n    this.instance = new Style(this);\n    this.host.instance.setStyle(this.instance);\n  }\n}\n","import { Component, Input, Host, AfterContentInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { AtlasManager, Circle, Fill, Stroke } from 'ol/style';\nimport { StyleComponent } from './style.component';\n\n@Component({\n  selector: 'aol-style-circle',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class StyleCircleComponent implements AfterContentInit, OnChanges, OnDestroy {\n  public componentType = 'style-circle';\n  public instance: Circle;\n\n  @Input()\n  fill: Fill;\n  @Input()\n  radius: number;\n  @Input()\n  snapToPixel: boolean;\n  @Input()\n  stroke: Stroke;\n  @Input()\n  atlasManager: AtlasManager;\n\n  constructor(@Host() private host: StyleComponent) {}\n\n  /**\n   * WORK-AROUND: since the re-rendering is not triggered on style change\n   * we trigger a radius change.\n   * see openlayers #6233 and #5775\n   */\n  update() {\n    if (!!this.instance) {\n      // console.log('setting ol.style.Circle instance\\'s radius');\n      this.instance.setRadius(this.radius);\n    }\n    this.host.update();\n  }\n\n  ngAfterContentInit() {\n    // console.log('creating ol.style.Circle instance with: ', this);\n    this.instance = new Circle(this);\n    this.host.instance.setImage(this.instance);\n    this.host.update();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['radius']) {\n      this.instance.setRadius(changes['radius'].currentValue);\n    }\n    // console.log('changes detected in aol-style-circle, setting new radius: ', changes['radius'].currentValue);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-style-circle');\n    this.host.instance.setImage(null);\n  }\n}\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Text } from 'ol/style';\nimport { StyleComponent } from './style.component';\n\n@Component({\n  selector: 'aol-style-text',\n  template: `\n    <div class=\"aol-style-text\"></div>\n  `,\n})\nexport class StyleTextComponent implements OnInit, OnChanges {\n  public instance: Text;\n  public componentType = 'style-text';\n\n  @Input()\n  font: string | undefined;\n  @Input()\n  offsetX: number | undefined;\n  @Input()\n  offsetY: number | undefined;\n  @Input()\n  scale: number | undefined;\n  @Input()\n  rotateWithView: boolean | undefined;\n  @Input()\n  rotation: number | undefined;\n  @Input()\n  text: string | undefined;\n  @Input()\n  textAlign: string | undefined;\n  @Input()\n  textBaseLine: string | undefined;\n\n  constructor(@Optional() private host: StyleComponent) {\n    if (!host) {\n      throw new Error('aol-style-text must be a descendant of aol-style');\n    }\n    // console.log('creating aol-style-text with: ', this);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.style.Text instance with: ', this);\n    this.instance = new Text(this);\n    this.host.instance.setText(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['font']) {\n      this.instance.setFont(changes['font'].currentValue);\n    }\n    if (changes['offsetX']) {\n      this.instance.setOffsetX(changes['offsetX'].currentValue);\n    }\n    if (changes['offsetY']) {\n      this.instance.setOffsetY(changes['offsetY'].currentValue);\n    }\n    if (changes['scale']) {\n      this.instance.setScale(changes['scale'].currentValue);\n    }\n    if (changes['rotation']) {\n      this.instance.setRotation(changes['rotation'].currentValue);\n    }\n    if (changes['text']) {\n      this.instance.setText(changes['text'].currentValue);\n    }\n    if (changes['textAlign']) {\n      this.instance.setTextAlign(changes['textAlign'].currentValue);\n    }\n    if (changes['textBaseLine']) {\n      this.instance.setTextBaseline(changes['textBaseLine'].currentValue);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-text, setting new properties: ', changes);\n  }\n}\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Stroke } from 'ol/style';\nimport { StyleComponent } from './style.component';\nimport { StyleCircleComponent } from './circle.component';\nimport { StyleTextComponent } from './text.component';\nimport { Color } from 'ol/color';\n\n@Component({\n  selector: 'aol-style-stroke',\n  template: `\n    <div class=\"aol-style-stroke\"></div>\n  `,\n})\nexport class StyleStrokeComponent implements OnInit, OnChanges {\n  public instance: Stroke;\n  /* the typings do not have the setters */\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\n\n  @Input()\n  color: Color | undefined;\n  @Input()\n  lineCap: string | undefined;\n  @Input()\n  lineDash: number[] | undefined;\n  @Input()\n  lineJoin: string | undefined;\n  @Input()\n  miterLimit: number | undefined;\n  @Input()\n  width: number | undefined;\n\n  constructor(\n    @Optional() styleHost: StyleComponent,\n    @Optional() styleCircleHost: StyleCircleComponent,\n    @Optional() styleTextHost: StyleTextComponent\n  ) {\n    if (!styleHost) {\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\n    }\n    if (!!styleTextHost) {\n      this.host = styleTextHost;\n    } else if (!!styleCircleHost) {\n      this.host = styleCircleHost;\n    } else {\n      this.host = styleHost;\n    }\n    // console.log('creating aol-style-stroke with: ', this);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.style.Stroke instance with: ', this);\n    this.instance = new Stroke(this);\n    switch (this.host.componentType) {\n      case 'style':\n        this.host.instance.setStroke(this.instance);\n        // console.log('setting ol.style instance\\'s stroke:', this.host);\n        break;\n      case 'style-text':\n        this.host.instance.setStroke(this.instance);\n        break;\n      case 'style-circle':\n        this.host.stroke = this.instance;\n        // console.log('setting ol.style.circle instance\\'s stroke:', this.host);\n        break;\n      default:\n        throw new Error('unknown host type: ' + this.host);\n      // break;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['color']) {\n      this.instance.setColor(changes['color'].currentValue);\n    }\n    if (changes['lineCap']) {\n      this.instance.setLineCap(changes['lineCap'].currentValue);\n    }\n    if (changes['lineDash']) {\n      this.instance.setLineDash(changes['lineDash'].currentValue);\n    }\n    if (changes['lineJoin']) {\n      this.instance.setLineJoin(changes['lineJoin'].currentValue);\n    }\n    if (changes['miterLimit']) {\n      this.instance.setMiterLimit(changes['miterLimit'].currentValue);\n    }\n    if (changes['width']) {\n      this.instance.setWidth(changes['width'].currentValue);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-stroke, setting new properties: ', changes);\n  }\n}\n","import { Component, Input, Host, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Icon } from 'ol/style';\nimport IconAnchorUnits from 'ol/style/IconAnchorUnits';\nimport IconOrigin from 'ol/style/IconOrigin';\nimport { StyleComponent } from './style.component';\n\n@Component({\n  selector: 'aol-style-icon',\n  template: `\n    <div class=\"aol-style-icon\"></div>\n  `,\n})\nexport class StyleIconComponent implements OnInit, OnChanges {\n  public instance: Icon;\n\n  @Input()\n  anchor: [number, number];\n  @Input()\n  anchorXUnits: IconAnchorUnits;\n  @Input()\n  anchorYUnits: IconAnchorUnits;\n  @Input()\n  anchorOrigin: IconOrigin;\n  @Input()\n  color: [number, number, number, number];\n  @Input()\n  crossOrigin: IconOrigin;\n  @Input()\n  img: string;\n  @Input()\n  offset: [number, number];\n  @Input()\n  offsetOrigin: IconOrigin;\n  @Input()\n  opacity: number;\n  @Input()\n  scale: number;\n  @Input()\n  snapToPixel: boolean;\n  @Input()\n  rotateWithView: boolean;\n  @Input()\n  rotation: number;\n  @Input()\n  size: [number, number];\n  @Input()\n  imgSize: [number, number];\n  @Input()\n  src: string;\n\n  constructor(@Host() private host: StyleComponent) {}\n\n  ngOnInit() {\n    // console.log('creating ol.style.Icon instance with: ', this);\n    this.instance = new Icon(this);\n    this.host.instance.setImage(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['opacity']) {\n      this.instance.setOpacity(changes['opacity'].currentValue);\n    }\n    if (changes['rotation']) {\n      this.instance.setRotation(changes['rotation'].currentValue);\n    }\n    if (changes['scale']) {\n      this.instance.setScale(changes['scale'].currentValue);\n    }\n    if (changes['src']) {\n      this.instance = new Icon(this);\n      this.host.instance.setImage(this.instance);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-icon: ', changes);\n  }\n}\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Fill } from 'ol/style';\nimport { StyleComponent } from './style.component';\nimport { StyleCircleComponent } from './circle.component';\nimport { StyleTextComponent } from './text.component';\nimport { Color } from 'ol/color';\nimport { ColorLike } from 'ol/colorlike';\n\n@Component({\n  selector: 'aol-style-fill',\n  template: `\n    <div class=\"aol-style-fill\"></div>\n  `,\n})\nexport class StyleFillComponent implements OnInit, OnChanges {\n  /* the typings do not have the setters */\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\n  public instance: Fill;\n\n  @Input()\n  color: Color | ColorLike;\n\n  constructor(\n    @Optional() styleHost: StyleComponent,\n    @Optional() styleCircleHost: StyleCircleComponent,\n    @Optional() styleTextHost: StyleTextComponent\n  ) {\n    if (!styleHost) {\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\n    }\n    if (!!styleTextHost) {\n      this.host = styleTextHost;\n    } else if (!!styleCircleHost) {\n      this.host = styleCircleHost;\n    } else {\n      this.host = styleHost;\n    }\n    // console.log('creating aol-style-fill with: ', this);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.style.Fill instance with: ', this);\n    this.instance = new Fill(this);\n    switch (this.host.componentType) {\n      case 'style':\n        this.host.instance.setFill(this.instance);\n        // console.log('setting ol.style instance\\'s fill:', this.host);\n        break;\n      case 'style-text':\n        this.host.instance.setFill(this.instance);\n        break;\n      case 'style-circle':\n        this.host.fill = this.instance;\n        // console.log('setting ol.style.circle instance\\'s fill:', this.host);\n        break;\n      default:\n        throw new Error('unknown host type: ' + this.host);\n      // break;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes['color']) {\n      this.instance.setColor(changes['color'].currentValue);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-fill, setting new color: ', changes);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { Control, defaults } from 'ol/control';\nimport { Collection } from 'ol';\nimport { Options as AttributionOptions } from 'ol/control/Attribution';\nimport { Options as RotateOptions } from 'ol/control/Rotate';\nimport { Options as ZoomOptions } from 'ol/control/Zoom';\n\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-defaults',\n  template: '',\n})\nexport class DefaultControlComponent implements OnInit, OnDestroy {\n  instance: Collection<Control>;\n  @Input()\n  attribution: boolean;\n  @Input()\n  attributionOptions: AttributionOptions;\n  @Input()\n  rotate: boolean;\n  @Input()\n  rotateOptions: RotateOptions;\n  @Input()\n  zoom: boolean;\n  @Input()\n  zoomOptions: ZoomOptions;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    // console.log('ol.control.defaults init: ', this);\n    this.instance = defaults(this);\n    this.instance.forEach(c => this.map.instance.addControl(c));\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-defaults');\n    this.instance.forEach(c => this.map.instance.removeControl(c));\n  }\n}\n","import { Component, ContentChild, OnDestroy, OnInit } from '@angular/core';\nimport { Control } from 'ol/control';\nimport { MapComponent } from '../map.component';\nimport { ContentComponent } from '../content.component';\n\n@Component({\n  selector: 'aol-control',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlComponent implements OnInit, OnDestroy {\n  public componentType = 'control';\n  instance: Control;\n  element: Element;\n  @ContentChild(ContentComponent)\n  content: ContentComponent;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    if (this.content) {\n      this.element = this.content.elementRef.nativeElement;\n      this.instance = new Control(this);\n      this.map.instance.addControl(this.instance);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.instance) {\n      this.map.instance.removeControl(this.instance);\n    }\n  }\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Attribution } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-attribution',\n  template: ``,\n})\nexport class ControlAttributionComponent implements OnInit, OnDestroy {\n  public componentType = 'control';\n  instance: Attribution;\n  target: Element;\n  @Input()\n  collapsible: boolean;\n\n  constructor(private map: MapComponent, private element: ElementRef) {}\n\n  ngOnInit() {\n    this.target = this.element.nativeElement;\n    // console.log('ol.control.Attribution init: ', this);\n    this.instance = new Attribution(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-attribution');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FullScreen } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-fullscreen',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlFullScreenComponent implements OnInit, OnDestroy {\n  instance: FullScreen;\n\n  @Input()\n  className: string;\n  @Input()\n  label: string;\n  @Input()\n  labelActive: string;\n  @Input()\n  tipLabel: string;\n  @Input()\n  keys: boolean;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-fullscreen');\n  }\n\n  ngOnInit() {\n    this.instance = new FullScreen(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-fullscreen');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport MousePosition from 'ol/control/MousePosition';\nimport { MapComponent } from '../map.component';\nimport { CoordinateFormat } from 'ol/coordinate';\nimport { ProjectionLike } from 'ol/proj';\n\n@Component({\n  selector: 'aol-control-mouseposition',\n  template: ``,\n})\nexport class ControlMousePositionComponent implements OnInit, OnDestroy {\n  instance: MousePosition;\n  @Input()\n  coordinateFormat: CoordinateFormat;\n  @Input()\n  projection: ProjectionLike;\n  target: Element;\n\n  constructor(private map: MapComponent, private element: ElementRef) {}\n\n  ngOnInit() {\n    this.target = this.element.nativeElement;\n    // console.log('ol.control.MousePosition init: ', this);\n    this.instance = new MousePosition(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-mouseposition');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Layer } from 'ol/layer';\nimport { View } from 'ol';\nimport { OverviewMap } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-overviewmap',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlOverviewMapComponent implements OnInit, OnChanges, OnDestroy {\n  instance: OverviewMap;\n  @Input()\n  collapsed: boolean;\n  @Input()\n  collapseLabel: string;\n  @Input()\n  collapsible: boolean;\n  @Input()\n  label: string;\n  @Input()\n  layers: Layer[];\n  @Input()\n  target: Element;\n  @Input()\n  tipLabel: string;\n  @Input()\n  view: View;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new OverviewMap(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeControl(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance != null && changes.hasOwnProperty('view')) {\n      this.reloadInstance();\n    }\n  }\n\n  private reloadInstance() {\n    this.map.instance.removeControl(this.instance);\n    this.instance = new OverviewMap(this);\n    this.map.instance.addControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Rotate } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-rotate',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlRotateComponent implements OnInit, OnDestroy {\n  instance: Rotate;\n\n  @Input()\n  className: string;\n  @Input()\n  label: string;\n  @Input()\n  tipLabel: string;\n  @Input()\n  duration: number;\n  @Input()\n  autoHide: boolean;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-rotate');\n  }\n\n  ngOnInit() {\n    this.instance = new Rotate(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-rotate');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ScaleLine } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-scaleline',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlScaleLineComponent implements OnInit, OnDestroy {\n  instance: ScaleLine;\n  @Input()\n  units: string;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-scaleline');\n  }\n\n  ngOnInit() {\n    this.instance = new ScaleLine(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-scaleline');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Zoom } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-zoom',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlZoomComponent implements OnInit, OnDestroy {\n  instance: Zoom;\n\n  @Input()\n  duration: number;\n  @Input()\n  zoomInLabel: string | Node;\n  @Input()\n  zoomOutLabel: string | Node;\n  @Input()\n  zoomInTipLabel: string;\n  @Input()\n  zoomOutTipLabel: string;\n  @Input()\n  delta: number;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-zoom');\n  }\n\n  ngOnInit() {\n    this.instance = new Zoom(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-zoom');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ZoomSlider } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-zoomslider',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlZoomSliderComponent implements OnInit, OnDestroy {\n  instance: ZoomSlider;\n\n  @Input()\n  className: string;\n  @Input()\n  duration: number;\n  @Input()\n  maxResolution: number;\n  @Input()\n  minResolution: number;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-zoomslider');\n  }\n\n  ngOnInit() {\n    this.instance = new ZoomSlider(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-zoomslider');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ZoomToExtent } from 'ol/control';\nimport { MapComponent } from '../map.component';\nimport { Extent } from 'ol/extent';\n\n@Component({\n  selector: 'aol-control-zoomtoextent',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlZoomToExtentComponent implements OnInit, OnDestroy {\n  instance: ZoomToExtent;\n\n  @Input()\n  className: string;\n  @Input()\n  label: string | Node;\n  @Input()\n  tipLabel: string;\n  @Input()\n  extent: Extent;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-zoomtoextent');\n  }\n\n  ngOnInit() {\n    this.instance = new ZoomToExtent(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-zoomtoextent');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { FormatComponent } from './format.component';\nimport { MVT } from 'ol/format';\nimport { Geometry } from 'ol/geom';\nimport GeometryType from 'ol/geom/GeometryType';\n\n@Component({\n  selector: 'aol-format-mvt',\n  template: '',\n  providers: [{ provide: FormatComponent, useExisting: forwardRef(() => FormatMVTComponent) }],\n})\nexport class FormatMVTComponent extends FormatComponent {\n  instance: MVT;\n\n  @Input()\n  featureClass:\n    | ((geom: Geometry | { [k: string]: any }) => any)\n    | ((geom: GeometryType, arg2: number[], arg3: number[] | number[][], arg4: { [k: string]: any }) => any);\n  @Input()\n  geometryName: string;\n  @Input()\n  layerName: string;\n  @Input()\n  layers: string[];\n\n  constructor() {\n    super();\n    this.instance = new MVT(this);\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { defaults, Interaction } from 'ol/interaction';\nimport { Collection } from 'ol';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-default',\n  template: '',\n})\nexport class DefaultInteractionComponent implements OnInit, OnDestroy {\n  instance: Collection<Interaction>;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = defaults();\n    this.instance.forEach(i => this.map.instance.addInteraction(i));\n  }\n\n  ngOnDestroy() {\n    this.instance.forEach(i => this.map.instance.removeInteraction(i));\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { defaults, Interaction, DragPan, DragZoom, PinchZoom,\n    MouseWheelZoom, KeyboardPan, KeyboardZoom } from 'ol/interaction';\nimport { Collection } from 'ol';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-freeboard',\n  template: '',\n})\nexport class FreeboardInteractionComponent implements OnInit, OnDestroy {\n    interactions: Array<Interaction>= [];\n\n    constructor(private map: MapComponent) {}\n\n    ngOnInit() {\n        this.interactions.push(new DragPan(this));\n        this.interactions.push(new DragZoom(this));\n        this.interactions.push(new PinchZoom(this));\n        this.interactions.push(new MouseWheelZoom(this));\n        this.interactions.push(new KeyboardPan(this));\n        this.interactions.push(new KeyboardZoom(this));\n        this.interactions.forEach(i => this.map.instance.addInteraction(i));\n    }\n\n    ngOnDestroy() {\n        this.interactions.forEach(i => this.map.instance.removeInteraction(i));\n    }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { DoubleClickZoom } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-doubleclickzoom',\n  template: '',\n})\nexport class DoubleClickZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: DoubleClickZoom;\n\n  @Input()\n  duration: number;\n  @Input()\n  delta: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DoubleClickZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { DragAndDrop } from 'ol/interaction';\nimport Feature from 'ol/format/Feature';\nimport { MapComponent } from '../map.component';\nimport { ProjectionLike } from 'ol/proj';\n\n@Component({\n  selector: 'aol-interaction-draganddrop',\n  template: '',\n})\nexport class DragAndDropInteractionComponent implements OnInit, OnDestroy {\n  instance: DragAndDrop;\n\n  @Input()\n  formatConstructors: ((n: Feature) => any)[];\n  @Input()\n  projection: ProjectionLike;\n  @Input()\n  target: Element;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragAndDrop(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { DragBox } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\nimport { Condition } from 'ol/events/condition';\nimport { EndCondition } from 'ol/interaction/DragBox';\n\n@Component({\n  selector: 'aol-interaction-dragbox',\n  template: '',\n})\nexport class DragBoxInteractionComponent implements OnInit, OnDestroy {\n  instance: DragBox;\n\n  @Input()\n  className: string;\n  @Input()\n  condition: Condition;\n  @Input()\n  boxEndCondition: EndCondition;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragBox(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { DragPan } from 'ol/interaction';\nimport Kinetic from 'ol/Kinetic';\nimport { MapComponent } from '../map.component';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-dragpan',\n  template: '',\n})\nexport class DragPanInteractionComponent implements OnInit, OnDestroy {\n  instance: DragPan;\n\n  @Input()\n  condition: Condition;\n  @Input()\n  kinetic: Kinetic;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragPan(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { DragRotate } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-dragrotate',\n  template: '',\n})\nexport class DragRotateInteractionComponent implements OnInit, OnDestroy {\n  instance: DragRotate;\n\n  @Input()\n  condition: Condition;\n  @Input()\n  duration: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragRotate(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { DragRotateAndZoom } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-dragrotateandzoom',\n  template: '',\n})\nexport class DragRotateAndZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: DragRotateAndZoom;\n\n  @Input()\n  condition: Condition;\n  @Input()\n  duration: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragRotateAndZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { DragZoom } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-dragzoom',\n  template: '',\n})\nexport class DragZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: DragZoom;\n\n  @Input()\n  className: string;\n  @Input()\n  condition: Condition;\n  @Input()\n  duration: number;\n  @Input()\n  out: boolean;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { MouseWheelZoom } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-mousewheelzoom',\n  template: '',\n})\nexport class MouseWheelZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: MouseWheelZoom;\n  @Input()\n  duration: number;\n  @Input()\n  timeout: number;\n  @Input()\n  useAnchor: boolean;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new MouseWheelZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { PinchZoom } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-pinchzoom',\n  template: '',\n})\nexport class PinchZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: PinchZoom;\n\n  @Input()\n  duration: number;\n  @Input()\n  constrainResolution: boolean;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new PinchZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit, EventEmitter, Output } from '@angular/core';\nimport { MapComponent } from '../map.component';\nimport { Draw } from 'ol/interaction';\nimport { Collection, Feature } from 'ol';\nimport { Vector } from 'ol/source';\nimport GeometryType from 'ol/geom/GeometryType';\nimport { Style } from 'ol/style';\nimport { DrawEvent, GeometryFunction } from 'ol/interaction/Draw';\nimport { StyleFunction } from 'ol/style/Style';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-draw',\n  template: '',\n})\nexport class DrawInteractionComponent implements OnInit, OnDestroy {\n  instance: Draw;\n\n  @Input()\n  clickTolerance?: number;\n  @Input()\n  features?: Collection<Feature>;\n  @Input()\n  source?: Vector;\n  @Input()\n  snapTolerance?: number;\n  @Input()\n  type: GeometryType;\n  @Input()\n  maxPoints?: number;\n  @Input()\n  minPoints?: number;\n  @Input()\n  finishCondition?: Condition;\n  @Input()\n  style?: Style | Style[] | StyleFunction;\n  @Input()\n  geometryFunction?: GeometryFunction;\n  @Input()\n  geometryName?: string;\n  @Input()\n  condition?: Condition;\n  @Input()\n  freehandCondition?: Condition;\n  @Input()\n  freehand?: boolean;\n  @Input()\n  wrapX?: boolean;\n\n  @Output()\n  onChange = new EventEmitter<DrawEvent>();\n  @Output()\n  onChangeActive = new EventEmitter<DrawEvent>();\n  @Output()\n  onDrawEnd = new EventEmitter<DrawEvent>();\n  @Output()\n  onDrawStart = new EventEmitter<DrawEvent>();\n  @Output()\n  onPropertyChange = new EventEmitter<DrawEvent>();\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new Draw(this);\n    this.instance.on('change', (event: DrawEvent) => this.onChange.emit(event));\n    this.instance.on('change:active', (event: DrawEvent) => this.onChangeActive.emit(event));\n    this.instance.on('drawend', (event: DrawEvent) => this.onDrawEnd.emit(event));\n    this.instance.on('drawstart', (event: DrawEvent) => this.onDrawStart.emit(event));\n    this.instance.on('propertychange', (event: DrawEvent) => this.onPropertyChange.emit(event));\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MapComponent } from '../map.component';\nimport { Select } from 'ol/interaction';\nimport { Layer } from 'ol/layer';\nimport { Style } from 'ol/style';\nimport { Collection, Feature } from 'ol';\nimport { SelectEvent, FilterFunction } from 'ol/interaction/Select';\nimport { StyleFunction } from 'ol/style/Style';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-select',\n  template: '',\n})\nexport class SelectInteractionComponent implements OnInit, OnDestroy {\n  instance: Select;\n\n  @Input()\n  addCondition?: Condition;\n  @Input()\n  condition?: Condition;\n  @Input()\n  layers?: Layer[] | ((layer: Layer) => boolean);\n  @Input()\n  style?: Style | Style[] | StyleFunction;\n  @Input()\n  removeCondition?: Condition;\n  @Input()\n  toggleCondition?: Condition;\n  @Input()\n  multi?: boolean;\n  @Input()\n  features?: Collection<Feature>;\n  @Input()\n  filter?: FilterFunction;\n  @Input()\n  wrapX?: boolean;\n\n  @Output()\n  onChange = new EventEmitter<SelectEvent>();\n  @Output()\n  onSelect = new EventEmitter<SelectEvent>();\n  @Output()\n  onPropertyChange = new EventEmitter<SelectEvent>();\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new Select(this);\n\n    this.instance.on('change', (event: SelectEvent) => this.onChange.emit(event));\n    this.instance.on('select', (event: SelectEvent) => this.onSelect.emit(event));\n    this.instance.on('propertychange', (event: SelectEvent) => this.onPropertyChange.emit(event));\n\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MapComponent } from '../map.component';\nimport { Modify } from 'ol/interaction';\nimport { Collection, Feature } from 'ol';\nimport { Style } from 'ol/style';\nimport { Vector } from 'ol/source';\nimport { ModifyEvent } from 'ol/interaction/Modify';\nimport { StyleFunction } from 'ol/style/Style';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-modify',\n  template: '',\n})\nexport class ModifyInteractionComponent implements OnInit, OnDestroy {\n  instance: Modify;\n\n  @Input()\n  condition?: Condition;\n  @Input()\n  deleteCondition?: Condition;\n  @Input()\n  pixelTolerance?: number;\n  @Input()\n  style?: Style | Style[] | StyleFunction;\n  @Input()\n  features: Collection<Feature>;\n  @Input()\n  wrapX?: boolean;\n  @Input()\n  source?: Vector;\n\n  @Output()\n  onModifyEnd = new EventEmitter<ModifyEvent>();\n  @Output()\n  onModifyStart = new EventEmitter<ModifyEvent>();\n  @Output()\n  onChange = new EventEmitter<ModifyEvent>();\n  @Output()\n  onChangeActive = new EventEmitter<ModifyEvent>();\n  @Output()\n  onPropertyChange = new EventEmitter<ModifyEvent>();\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new Modify(this);\n    this.instance.on('change', (event: ModifyEvent) => this.onChange.emit(event));\n    this.instance.on('change:active', (event: ModifyEvent) => this.onChangeActive.emit(event));\n    this.instance.on('propertychange', (event: ModifyEvent) => this.onPropertyChange.emit(event));\n    this.instance.on('modifyend', (event: ModifyEvent) => this.onModifyEnd.emit(event));\n    this.instance.on('modifystart', (event: ModifyEvent) => this.onModifyStart.emit(event));\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Translate } from 'ol/interaction';\nimport { Collection, Feature } from 'ol';\nimport { Layer } from 'ol/layer';\nimport { TranslateEvent } from 'ol/interaction/Translate';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-translate',\n  template: '',\n})\nexport class TranslateInteractionComponent implements OnInit, OnDestroy {\n  instance: Translate;\n\n  @Input()\n  features?: Collection<Feature>;\n  @Input()\n  layers?: Layer[] | ((layer: Layer) => boolean);\n  @Input()\n  hitTolerance?: number;\n\n  @Output()\n  onChange: EventEmitter<TranslateEvent>;\n  @Output()\n  onPropertyChange: EventEmitter<TranslateEvent>;\n  @Output()\n  onTranslateEnd: EventEmitter<TranslateEvent>;\n  @Output()\n  onTranslateStart: EventEmitter<TranslateEvent>;\n  @Output()\n  onTranslating: EventEmitter<TranslateEvent>;\n\n  constructor(private map: MapComponent) {\n    this.onChange = new EventEmitter<TranslateEvent>();\n    this.onPropertyChange = new EventEmitter<TranslateEvent>();\n    this.onTranslateEnd = new EventEmitter<TranslateEvent>();\n    this.onTranslateStart = new EventEmitter<TranslateEvent>();\n    this.onTranslating = new EventEmitter<TranslateEvent>();\n  }\n\n  ngOnInit() {\n    this.instance = new Translate(this);\n\n    this.instance.on('change', (event: TranslateEvent) => this.onChange.emit(event));\n    this.instance.on('propertychange', (event: TranslateEvent) => this.onPropertyChange.emit(event));\n    this.instance.on('translateend', (event: TranslateEvent) => this.onTranslateEnd.emit(event));\n    this.instance.on('translatestart', (event: TranslateEvent) => this.onTranslateStart.emit(event));\n    this.instance.on('translating', (event: TranslateEvent) => this.onTranslating.emit(event));\n\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, ElementRef, OnInit } from '@angular/core';\nimport { Attribution } from 'ol/control';\n\n@Component({\n  selector: 'aol-attribution',\n  template: '<ng-content></ng-content>',\n})\nexport class AttributionComponent implements OnInit {\n  instance: Attribution;\n  html: string;\n\n  constructor(private elementRef: ElementRef) {}\n\n  ngOnInit() {\n    this.html = this.elementRef.nativeElement.innerHTML;\n    this.instance = new Attribution(this);\n  }\n}\n","import { AfterViewInit, Component, ContentChildren, Host, QueryList } from '@angular/core';\nimport { Attribution } from 'ol/control';\nimport { SourceComponent } from './sources/source.component';\nimport { AttributionComponent } from './attribution.component';\n\n@Component({\n  selector: 'aol-attributions',\n  template: '<ng-content></ng-content>',\n})\nexport class AttributionsComponent implements AfterViewInit {\n  instance: Array<Attribution>;\n\n  @ContentChildren(AttributionComponent)\n  attributions: QueryList<AttributionComponent>;\n\n  constructor(@Host() private source: SourceComponent) {}\n\n  /* we can do this at the very end */\n  ngAfterViewInit() {\n    if (this.attributions.length) {\n      this.instance = this.attributions.map(cmp => cmp.instance);\n      // console.log('setting attributions:', this.instance);\n      this.source.instance.setAttributions(this.instance);\n    }\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { SourceComponent } from './source.component';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { UTFGrid } from 'ol/source';\n\n@Component({\n  selector: 'aol-source-utfgrid',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceUTFGridComponent) }],\n})\nexport class SourceUTFGridComponent extends SourceComponent implements OnInit {\n  instance: UTFGrid;\n  @Input() tileJSON: JSON;\n  @Input() url: string;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new UTFGrid(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","/*\n * Public API Surface of ngx-openlayers\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ViewComponent } from './lib/view.component';\nimport { GraticuleComponent } from './lib/graticule.component';\nimport { LayerGroupComponent } from './lib/layers/layergroup.component';\nimport { LayerImageComponent } from './lib/layers/layerimage.component';\nimport { LayerTileComponent } from './lib/layers/layertile.component';\nimport { MapComponent } from './lib/map.component';\nimport { LayerVectorComponent } from './lib/layers/layervector.component';\nimport { LayerVectorTileComponent } from './lib/layers/layervectortile.component';\nimport { SourceOsmComponent } from './lib/sources/osm.component';\nimport { SourceBingmapsComponent } from './lib/sources/bingmaps.component';\nimport { SourceClusterComponent } from './lib/sources/cluster.component';\nimport { SourceVectorComponent } from './lib/sources/vector.component';\nimport { SourceXYZComponent } from './lib/sources/xyz.component';\nimport { SourceTileWMTSComponent } from './lib/sources/tilewmts.component';\nimport { SourceVectorTileComponent } from './lib/sources/vectortile.component';\nimport { SourceTileWMSComponent } from './lib/sources/tilewms.component';\nimport { SourceTileJSONComponent } from './lib/sources/tilejson.component';\nimport { SourceGeoJSONComponent } from './lib/sources/geojson.component';\nimport { SourceImageStaticComponent } from './lib/sources/imagestatic.component';\nimport { SourceImageWMSComponent } from './lib/sources/imagewms.component';\nimport { SourceImageArcGISRestComponent } from './lib/sources/imagearcgisrest.component';\nimport { SourceRasterComponent } from './lib/sources/raster.component';\nimport { FeatureComponent } from './lib/feature.component';\nimport { GeometryCircleComponent } from './lib/geom/geometrycircle.component';\nimport { GeometryLinestringComponent } from './lib/geom/geometrylinestring.component';\nimport { GeometryMultiLinestringComponent } from './lib/geom/geometrymultilinestring.component';\nimport { GeometryMultiPointComponent } from './lib/geom/geometrymultipoint.component';\nimport { GeometryMultiPolygonComponent } from './lib/geom/geometrymultipolygon.component';\nimport { GeometryPointComponent } from './lib/geom/geometrypoint.component';\nimport { GeometryPolygonComponent } from './lib/geom/geometrypolygon.component';\nimport { CoordinateComponent } from './lib/coordinate.component';\nimport { CollectionCoordinatesComponent } from './lib/collectioncoordinates.component';\nimport { StyleComponent } from './lib/styles/style.component';\nimport { StyleCircleComponent } from './lib/styles/circle.component';\nimport { StyleStrokeComponent } from './lib/styles/stroke.component';\nimport { StyleIconComponent } from './lib/styles/icon.component';\nimport { StyleFillComponent } from './lib/styles/fill.component';\nimport { StyleTextComponent } from './lib/styles/text.component';\nimport { DefaultControlComponent } from './lib/controls/default.component';\nimport { ControlComponent } from './lib/controls/control.component';\nimport { ControlAttributionComponent } from './lib/controls/attribution.component';\nimport { ControlFullScreenComponent } from './lib/controls/fullscreen.component';\nimport { ControlMousePositionComponent } from './lib/controls/mouseposition.component';\nimport { ControlOverviewMapComponent } from './lib/controls/overviewmap.component';\nimport { ControlRotateComponent } from './lib/controls/rotate.component';\nimport { ControlScaleLineComponent } from './lib/controls/scaleline.component';\nimport { ControlZoomComponent } from './lib/controls/zoom.component';\nimport { ControlZoomSliderComponent } from './lib/controls/zoomslider.component';\nimport { ControlZoomToExtentComponent } from './lib/controls/zoomtoextent.component';\nimport { FormatMVTComponent } from './lib/formats/mvt.component';\nimport { TileGridComponent } from './lib/tilegrid.component';\nimport { TileGridWMTSComponent } from './lib/tilegridwmts.component';\nimport { DefaultInteractionComponent } from './lib/interactions/default.component';\nimport { FreeboardInteractionComponent } from './lib/interactions/freeboard.component';\nimport { DoubleClickZoomInteractionComponent } from './lib/interactions/doubleclickzoom.component';\nimport { DragAndDropInteractionComponent } from './lib/interactions/draganddrop.component';\nimport { DragBoxInteractionComponent } from './lib/interactions/dragbox.component';\nimport { DragPanInteractionComponent } from './lib/interactions/dragpan.component';\nimport { DragRotateInteractionComponent } from './lib/interactions/dragrotate.component';\nimport { DragRotateAndZoomInteractionComponent } from './lib/interactions/dragrotateandzoom.component';\nimport { DragZoomInteractionComponent } from './lib/interactions/dragzoom.component';\nimport { MouseWheelZoomInteractionComponent } from './lib/interactions/mousewheelzoom.component';\nimport { PinchZoomInteractionComponent } from './lib/interactions/pinchzoom.component';\nimport { DrawInteractionComponent } from './lib/interactions/draw.component';\nimport { SelectInteractionComponent } from './lib/interactions/select.component';\nimport { ModifyInteractionComponent } from './lib/interactions/modify.component';\nimport { TranslateInteractionComponent } from './lib/interactions/translate.component';\nimport { OverlayComponent } from './lib/overlay.component';\nimport { ContentComponent } from './lib/content.component';\nimport { AttributionsComponent } from './lib/attributions.component';\nimport { AttributionComponent } from './lib/attribution.component';\nimport { SourceUTFGridComponent } from './lib/sources/utfgrid.component';\n\nexport {\n  MapComponent,\n  ViewComponent,\n  GraticuleComponent,\n  LayerGroupComponent,\n  LayerImageComponent,\n  LayerTileComponent,\n  LayerVectorComponent,\n  LayerVectorTileComponent,\n  SourceOsmComponent,\n  SourceBingmapsComponent,\n  SourceClusterComponent,\n  SourceUTFGridComponent,\n  SourceVectorComponent,\n  SourceXYZComponent,\n  SourceVectorTileComponent,\n  SourceTileWMSComponent,\n  SourceTileWMTSComponent,\n  SourceTileJSONComponent,\n  SourceGeoJSONComponent,\n  SourceImageStaticComponent,\n  SourceImageWMSComponent,\n  SourceRasterComponent,\n  SourceImageArcGISRestComponent,\n  FeatureComponent,\n  GeometryLinestringComponent,\n  GeometryMultiLinestringComponent,\n  GeometryMultiPointComponent,\n  GeometryMultiPolygonComponent,\n  GeometryPointComponent,\n  GeometryPolygonComponent,\n  GeometryCircleComponent,\n  CoordinateComponent,\n  CollectionCoordinatesComponent,\n  StyleComponent,\n  StyleCircleComponent,\n  StyleFillComponent,\n  StyleIconComponent,\n  StyleStrokeComponent,\n  StyleTextComponent,\n  DefaultControlComponent,\n  ControlComponent,\n  ControlAttributionComponent,\n  ControlFullScreenComponent,\n  ControlMousePositionComponent,\n  ControlOverviewMapComponent,\n  ControlRotateComponent,\n  ControlScaleLineComponent,\n  ControlZoomComponent,\n  ControlZoomSliderComponent,\n  ControlZoomToExtentComponent,\n  FormatMVTComponent,\n  TileGridComponent,\n  TileGridWMTSComponent,\n  DefaultInteractionComponent,\n  FreeboardInteractionComponent,\n  DoubleClickZoomInteractionComponent,\n  DragAndDropInteractionComponent,\n  DragBoxInteractionComponent,\n  DragPanInteractionComponent,\n  DragRotateInteractionComponent,\n  DragRotateAndZoomInteractionComponent,\n  DragZoomInteractionComponent,\n  MouseWheelZoomInteractionComponent,\n  PinchZoomInteractionComponent,\n  DrawInteractionComponent,\n  SelectInteractionComponent,\n  ModifyInteractionComponent,\n  TranslateInteractionComponent,\n  OverlayComponent,\n  ContentComponent,\n  AttributionsComponent,\n  AttributionComponent,\n};\n\nconst COMPONENTS = [\n  MapComponent,\n\n  ViewComponent,\n  GraticuleComponent,\n\n  LayerGroupComponent,\n  LayerImageComponent,\n  LayerTileComponent,\n  LayerVectorComponent,\n  LayerVectorTileComponent,\n\n  SourceOsmComponent,\n  SourceBingmapsComponent,\n  SourceClusterComponent,\n  SourceUTFGridComponent,\n  SourceVectorComponent,\n  SourceXYZComponent,\n  SourceVectorTileComponent,\n  SourceTileWMSComponent,\n  SourceTileWMTSComponent,\n  SourceTileJSONComponent,\n  SourceGeoJSONComponent,\n  SourceImageStaticComponent,\n  SourceImageWMSComponent,\n  SourceImageArcGISRestComponent,\n  SourceRasterComponent,\n  FeatureComponent,\n  GeometryLinestringComponent,\n  GeometryMultiLinestringComponent,\n  GeometryMultiPointComponent,\n  GeometryMultiPolygonComponent,\n  GeometryPointComponent,\n  GeometryPolygonComponent,\n  GeometryCircleComponent,\n  CoordinateComponent,\n  CollectionCoordinatesComponent,\n\n  StyleComponent,\n  StyleCircleComponent,\n  StyleFillComponent,\n  StyleIconComponent,\n  StyleStrokeComponent,\n  StyleTextComponent,\n\n  DefaultControlComponent,\n  ControlComponent,\n  ControlAttributionComponent,\n  ControlFullScreenComponent,\n  ControlMousePositionComponent,\n  ControlOverviewMapComponent,\n  ControlRotateComponent,\n  ControlScaleLineComponent,\n  ControlZoomComponent,\n  ControlZoomSliderComponent,\n  ControlZoomToExtentComponent,\n\n  FormatMVTComponent,\n  TileGridComponent,\n  TileGridWMTSComponent,\n\n  DefaultInteractionComponent,\n  FreeboardInteractionComponent,\n  DoubleClickZoomInteractionComponent,\n  DragAndDropInteractionComponent,\n  DragBoxInteractionComponent,\n  DragPanInteractionComponent,\n  DragRotateInteractionComponent,\n  DragRotateAndZoomInteractionComponent,\n  DragZoomInteractionComponent,\n  MouseWheelZoomInteractionComponent,\n  PinchZoomInteractionComponent,\n  DrawInteractionComponent,\n  SelectInteractionComponent,\n  ModifyInteractionComponent,\n  TranslateInteractionComponent,\n\n  OverlayComponent,\n  ContentComponent,\n  AttributionsComponent,\n  AttributionComponent,\n];\n\n@NgModule({\n  declarations: COMPONENTS,\n  imports: [CommonModule],\n  exports: COMPONENTS,\n})\nexport class AngularOpenlayersModule {}\n"]}