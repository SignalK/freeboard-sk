@use '@angular/material' as mat;
@import '@angular/material/theming';

// Include non-theme styles for core.
@include mat-core();

// Define a theme.
$my-primary: mat.define-palette(mat.$indigo-palette, 500,700,200);
$my-accent:  mat.define-palette(mat.$amber-palette, 500,700,200);
// The "warn" palette is optional and defaults to red if not specified.
$my-warn:    mat.define-palette(mat.$red-palette, 500,700,200);

$my-theme: mat.define-light-theme((
 color: (
   primary: $my-primary,
   accent: $my-accent,
   warn: $my-warn,
 ),
 typography: mat.define-typography-config(),
 density: 0,
));

// Define a dark theme.
$my-dark-primary: mat.define-palette(mat.$light-blue-palette, 200,300,400);
$my-dark-accent:  mat.define-palette(mat.$amber-palette, A400, A100, A700);
$my-dark-warn:    mat.define-palette(mat.$deep-orange-palette, A400);

$my-dark-theme: mat.define-dark-theme((
 color: (
   primary: $my-dark-primary,
   accent: $my-dark-accent,
   warn: $my-dark-warn,
 ),
 typography: mat.define-typography-config(),
 density: 0,
));

// Include all theme styles for the components.
@include mat.all-component-themes($my-theme);

.dark-theme {
    @include mat.all-component-colors($my-dark-theme);

    .about-row .item a {
        color: mat-color($my-dark-accent);
    }
    
    /* Track */
    ::-webkit-scrollbar-track {
        background: rgba(0,0,0,.5);
    }
    
    /* Handle on hover */
    ::-webkit-scrollbar-thumb:hover {
        background: #999;
    }
  }

// std elements
.about-row .item a  {
    color: mat-color($my-primary);
}

/* width */
::-webkit-scrollbar {
    width: 6px;
    height: 6px;
}

/* Track */
::-webkit-scrollbar-track {
    background: #f1f1f1;
}

/* Handle */
::-webkit-scrollbar-thumb {
    background: #888;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
    background: #555;
}

@mixin popover-theme($my-theme) {
    $primary: map-get($my-theme, primary);
    $accent: map-get($my-theme, accent);
    $warn: map-get($my-theme, warn);
    $background: map-get($my-theme, background);
    $background-color:  map-get($background, background);

    .popover-title {
        border-bottom: 1px solid $light-primary-text;
    }   

    .popover > .arrow:after {
        border-color: transparent;
    }
    .popover.top > .arrow {
        border-top-color: $background-color;
    }    
    .popover.top > .arrow:after {
        border-top-color: $background-color;
    }     
}

@mixin popover-typography($config) {
    .popover {
        font: {
            family: mat-font-family($config, body-1);
            size: mat-font-size($config, body-1);
            weight: mat-font-weight($config, body-1);
        }
    }
}  

// Include theme styles for custom components.
@include popover-theme($my-theme);

